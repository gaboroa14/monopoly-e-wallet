{"version":3,"sources":["components/Button/index.js","components/Logo/logo.png","components/Logo/index.js","components/PlayerName/index.js","components/Footer/marvel.png","components/Footer/kuro.png","components/Footer/index.js","views/Index/index.js","components/Player/index.js","components/PlayerGroup/index.js","views/Game/index.js","components/Keyboard/Key.js","components/Keyboard/index.js","components/BottomButtons/index.js","views/SendMoney/index.js","views/Bankrupt/index.js","views/Bank/index.js","views/GameOver/index.js","views/WinnerWinnerChickenDinner/index.js","views/WithdrawMoney/index.js","components/TransactionsTable/index.js","views/History/index.js","App.js","index.js"],"names":["Button","text","color","action","size","className","onClick","Logo","mb","width","style","marginTop","alt","src","logo","PlayerName","name","onTextChange","value","onChange","e","Footer","marvel","kuro","Index","useState","playerName","setPlayerName","history","useHistory","validateField","Swal","fire","height","target","title","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","showCancelButton","then","result","isConfirmed","push","input","inputAttributes","length","isDenied","Player","token","amount","gameover","winner","winnerScreen","undefined","borderStyle","borderColor","borderWidth","boxShadow","borderRadius","PlayerGroup","players","map","index","Game","handleSendingMoney","user","to","Key","number","Keyboard","onKeyPress","BottomButtons","leftButton","rightButton","SendMoney","useParams","bank","monto","setMonto","hasComma","setHasComma","afterComma","setAfterComma","appendNumberToInput","nvo_monto","handleKeyPress","handleBackButtonClick","buttons","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","readOnly","n","Bankrupt","handleBankruptcy","who","class","marginBottom","link","Bank","showBankerOptions","showCloseButton","showDenyButton","denyButtonColor","denyButtonText","handleWithdrawingMoney","isDismissed","icon","faAddressBook","faHourglassEnd","GameOver","faHome","WinnerWinnerChickenDinner","WithdrawMoney","TransactionsTable","transactions","sender","receiver","hour","History","faBackward","faAmbulance","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b5dafee.chunk.js","sourcesContent":["const Button = ({text, color, action, size}) => {\r\n    return(\r\n        <button className={`button is-${color} is-${size}`} onClick={action}>{text}</button>\r\n    );\r\n}\r\n\r\nexport default Button;","export default __webpack_public_path__ + \"static/media/logo.35edb2b5.png\";","import logo from \"./logo.png\";\r\n\r\nconst Logo = ({mb}) => {\r\n    return(\r\n    <figure className={`image container mb-${mb} has-ratio`} width=\"400\" style={{marginTop: \"-2rem\"}}>\r\n        <img alt=\"Logo de Monopoly\" src={logo}/>\r\n    </figure>);\r\n}\r\n\r\nexport default Logo;","const PlayerName = ({name, onTextChange}) => {\r\n    return(\r\n        <div>\r\n            <label className=\"is-white is-size-4\" style={{\"letter-spacing\":'2px'}}>\r\n                Jugador:<br/>\r\n                <input className=\"input\" value={name} onChange={(e) => onTextChange(e)}></input>\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayerName;","export default __webpack_public_path__ + \"static/media/marvel.568d8c62.png\";","export default __webpack_public_path__ + \"static/media/kuro.cbe4521a.png\";","import marvel from \"./marvel.png\"\r\nimport kuro from \"./kuro.png\"\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <div className=\"level has-text-centered is-mobile mt-6\">\r\n            <div className=\"level-left mt-6\">\r\n                <div className=\"level-item\">\r\n                    <img src={marvel} alt=\"Logo de MARVEL\" className=\"image has-ratio\" width=\"125\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"level-right mt-6\">\r\n                <div className=\"level-item\">\r\n                    <img src={kuro} alt=\"Logo de KuroDev\" className=\"image has-ratio\" width=\"67\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import Button from \"../../components/Button\";\r\nimport Logo from \"../../components/Logo\";\r\nimport PlayerName from \"../../components/PlayerName\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nconst Index = () => {\r\n  const [playerName, setPlayerName] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  const validateField = () => {\r\n    if (playerName===\"\"){\r\n      Swal.fire(\"chacho marico mete un nombre\");\r\n      return false;\r\n    } else return true;\r\n  }\r\n\r\n  const handleCreateClick = () => {\r\n    //Conectar con el backend para crear:\r\n    // -Banquero\r\n    // -Sala\r\n    // Debería retornar el código de la sala + el token.\r\n\r\n    // Teóricamente el procedimiento de ingresar el token debería hacerse aquí.\r\n    if (!validateField()) return;\r\n    Swal.fire({\r\n      title: \"El código de la sala es: AJSK2\",\r\n      text: \"Esperando jugadores\",\r\n      confirmButtonColor: \"#71945B\",\r\n      cancelButtonColor: \"#B85B28\",\r\n      confirmButtonText: \"Comenzar\",\r\n      cancelButtonText: \"Cancelar\",\r\n      showCancelButton: true,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire({\r\n          title: \"¿Está seguro que desea comenzar la partida?\",\r\n          confirmButtonColor: \"#71945B\",\r\n          cancelButtonColor: \"#B85B28\",\r\n          confirmButtonText: \"Sí\",\r\n          cancelButtonText: \"No\",\r\n          showCancelButton: true,\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            //Conectar con el backend para crear la partida.\r\n\r\n            history.push(\"/bank\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleJoinClick = () => {\r\n    if (!validateField()) return;\r\n    Swal.fire({\r\n      title: \"Introduzca el código de la sala: \",\r\n      input: \"text\",\r\n      inputAttributes: {\r\n        value: \"ldkj\",\r\n      },\r\n    }).then((result) => {\r\n      if (result.value.length === 0) {\r\n        Swal.fire({\r\n          title: \"Debe introducir un código válido\",\r\n          confirmButtonColor: \"#71945B\",\r\n          confirmButtonText: \"Aceptar\",\r\n        });\r\n      } else {\r\n        //Conectar con backend para crear el usuario y unirlo a la sala.\r\n\r\n        Swal.fire({\r\n          title: \"El código de la sala es: AJSK2\",\r\n          text: \"Esperando jugadores\",\r\n          confirmButtonColor: \"#71945B\",\r\n          cancelButtonColor: \"#B85B28\",\r\n          cancelButtonText: \"Cancelar\",\r\n          showCancelButton: true,\r\n        }).then((result) => {\r\n          if (result.isDenied) {\r\n            //Conectar con backend para borrar el usuario de la sala.\r\n          } else if (result.isConfirmed) {\r\n            //Comenzar la partida (SÓLO PARA EFECTOS DE PRUEBAS)\r\n            history.push(\"/game\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className=\"section is-centered has-background-danger\" style={{height:\"100%\"}}>\r\n      <div className=\"container\">\r\n        <Logo mb=\"6\" />\r\n        <PlayerName \r\n        name={playerName}\r\n        onTextChange={(e) => setPlayerName(e.target.value)}/>\r\n        <div className=\"buttons is-centered mt-6 mb-6\">\r\n          <Button\r\n            text=\"Crear\"\r\n            color=\"primary\"\r\n            action={handleCreateClick}\r\n            size=\"large\"\r\n          />\r\n          <Button\r\n            text=\"Unirse\"\r\n            color=\"link\"\r\n            action={handleJoinClick}\r\n            size=\"large\"\r\n          />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n      <div className=\"hero has-background-danger\">\r\n        <div className=\"hero-body\"></div>\r\n      </div>\r\n      </section>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","const Player = ({\r\n  playerName,\r\n  token,\r\n  amount,\r\n  action,\r\n  gameover,\r\n  winner,\r\n  winnerScreen,\r\n}) => {\r\n  return (\r\n    <div\r\n      onClick={action}\r\n      className={`card has-text-centered ${(!winner && winnerScreen) ? \"tint\" : undefined}`}\r\n      style={\r\n        gameover\r\n          ? {\r\n              borderStyle: \"solid\",\r\n              borderColor: \"#C70000\",\r\n              borderWidth: \"1em\",\r\n            }\r\n          : undefined || winner\r\n          ? {\r\n              boxShadow: \"0 0 0 0.75rem #f9ee23\",\r\n            }\r\n          : undefined \r\n      }\r\n    >\r\n      <header className=\"card-header \">\r\n        <div className=\"card-header-title is-centered\">\r\n          <div\r\n            className=\"has-background-warning pl-5 pr-5 pt-1 has-text-white\"\r\n            style={{ borderRadius: \"5px\" }}\r\n          >\r\n            {playerName}\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <div className=\"card-image is-128x128\">\r\n        <figure className=\"image is-4by3 tint\">\r\n          <img src={token} alt=\"token\" />\r\n        </figure>\r\n      </div>\r\n      <footer className=\"card-footer\">\r\n        <p className=\"card-footer-item has-text-black is-centered\">\r\n          {amount !== \"null\" ? `₩ ${amount}` : undefined}\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import Player from \"../Player\";\n\nconst PlayerGroup = ({ players, winner }) => {\n  return (\n    <div>\n      <div className=\"columns is-mobile is-centered has-text-centered mt-1\">\n        {\n          // eslint-disable-next-line\n          players.map((value, index) => {\n            if (winner) {\n              if (index === 0 || index === 1)\n                return (\n                  <div key={index} className=\"column is-6\">\n                    <Player\n                      {...value}\n                      winner={winner === value.playerName ? winner : undefined}\n                      winnerScreen={true}\n                    />\n                  </div>\n                );\n            } else if (index === 0 || index === 1)\n              return (\n                <div key={index} className=\"column is-6\">\n                  <Player {...value} />\n                </div>\n              );\n            else return <div></div>;\n          })\n        }\n      </div>\n      <div className=\"columns is-mobile is-half is-centered has-text-centered\">\n        {\n          // eslint-disable-next-line\n          players.map((value, index) => {\n            if (winner) {\n              if (index === 2 || index === 3)\n                return (\n                  <div key={index} className=\"column is-6\">\n                    <Player\n                      {...value}\n                      winner={winner === value.playerName ? winner : undefined}\n                      winnerScreen={true}\n                    />\n                  </div>\n                );\n            } else if (index === 2 || index === 3)\n              return (\n                <div key={index} className=\"column is-6\">\n                  <Player {...value} />\n                </div>\n              );\n            else return <div></div>;\n          })\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerGroup;\n","import Logo from \"../../components/Logo\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport PlayerGroup from \"../../components/PlayerGroup\";\r\n\r\nconst Game = () => {\r\n  let history = useHistory();\r\n\r\n  const showCurrentAmount = () => {\r\n    Swal.fire({\r\n      title: \"Su saldo es ₩1.000\",\r\n      confirmButtonColor: \"#71945B\",\r\n      confirmButtonText: \"Aceptar\",\r\n    });\r\n  };\r\n\r\n  const handleSendingMoney = (user) => {\r\n    history.push(`/send/${user}`);\r\n  };\r\n\r\n  const players = [\r\n    {\r\n      playerName: \"GABOX\",\r\n      token: \"http://placekitten.com/128/128\",\r\n      amount: \"1000\",\r\n      action: showCurrentAmount,\r\n    },\r\n    {\r\n      playerName: \"ANYI\",\r\n      token: \"http://placekitten.com/128/129\",\r\n      amount: \"~2000\",\r\n      action: () => handleSendingMoney(\"ANYI\"),\r\n    },\r\n    {\r\n      playerName: \"AJAV06\",\r\n      token: \"http://placekitten.com/129/128\",\r\n      amount: \"~1000\",\r\n      action: () => handleSendingMoney(\"AJAV06\"),\r\n    },\r\n    {\r\n      playerName: \"JONABB\",\r\n      token: \"http://placekitten.com/127/128\",\r\n      amount: \"~2000\",\r\n      action: () => handleSendingMoney(\"JONABB\"),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <section className=\"section is-centered\">\r\n      <div className=\"container\">\r\n        <Logo />\r\n        <PlayerGroup players={players} />\r\n        <div className=\"columns is-mobile is-half is-centered has-text-centered\">\r\n          <div className=\"column is-12\">\r\n            <Link to=\"/bankrupt/\">\r\n              <div className=\"box has-text-danger\">chao cheo</div>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","const Key = ({number, action}) => {\r\n    return (\r\n        <div className=\"column is-4\">\r\n            <div onClick={(e) => action(e)} className=\"button is-large has-background-warning has-text-white\" value={number}>\r\n                {number}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Key;","import Key from \"./Key\";\r\n\r\nconst Keyboard = ({ onKeyPress }) => {\r\n  return (\r\n    <div className=\"columns is-mobile is-3 is-centered has-text-centered\">\r\n      <div className=\"box has-background-success is-centered has-text-centered is-6\">\r\n        <div className=\"columns is-mobile  is-centered\">\r\n          <Key number=\"1\" action={(e, number) => onKeyPress(e, \"1\")} />\r\n          <Key number=\"2\" action={(e, number) => onKeyPress(e, \"2\")} />\r\n          <Key number=\"3\" action={(e, number) => onKeyPress(e, \"3\")} />\r\n        </div>\r\n        <div className=\"columns is-mobile  \">\r\n          <Key number=\"4\" action={(e, number) => onKeyPress(e, \"4\")} />\r\n          <Key number=\"5\" action={(e, number) => onKeyPress(e, \"5\")} />\r\n          <Key number=\"6\" action={(e, number) => onKeyPress(e, \"6\")} />\r\n        </div>\r\n        <div className=\"columns is-mobile  \">\r\n          <Key number=\"7\" action={(e, number) => onKeyPress(e, \"7\")} />\r\n          <Key number=\"8\" action={(e, number) => onKeyPress(e, \"8\")} />\r\n          <Key number=\"9\" action={(e, number) => onKeyPress(e, \"9\")} />\r\n        </div>\r\n        <div className=\"columns is-mobile  \">\r\n          <Key number=\".\" action={(e, number) => onKeyPress(e, \".\")} />\r\n          <Key number=\"0\" action={(e, number) => onKeyPress(e, \"0\")} />\r\n          <Key number=\"x\" action={(e, number) => onKeyPress(e, \"x\")} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Keyboard;\r\n","import Button from \"../Button\";\n\nconst BottomButtons = ({ leftButton, rightButton }) => {\n  return (\n    <div className=\"level is-mobile has-text-black mt-4\">\n      <div className=\"level-item\">\n        {leftButton ? (\n          <div className=\"level-left\">\n            <Button\n              text={leftButton.text}\n              color=\"warning\"\n              size=\"large\"\n              action={leftButton.action}\n            />\n          </div>\n        ) : undefined}\n      </div>\n      {rightButton ? (\n        <div className=\"level-item\">\n          <div className=\"level-right\">\n            <Button\n              text={rightButton.text}\n              color=\"link\"\n              size=\"large\"\n              action={rightButton.action}\n            />\n          </div>\n        </div>\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default BottomButtons;\n","import { useState } from \"react\";\r\nimport Keyboard from \"../../components/Keyboard\";\r\nimport Logo from \"../../components/Logo\";\r\nimport BottomButtons from \"../../components/BottomButtons\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst SendMoney = () => {\r\n  let history = useHistory();\r\n\r\n  const {user, bank} = useParams();\r\n\r\n  const saldoActual = \"1.000\";\r\n\r\n  const [monto, setMonto] = useState(\"\");\r\n  const [hasComma, setHasComma] = useState(false);\r\n  const [afterComma, setAfterComma] = useState(0);\r\n\r\n  const appendNumberToInput = (number) => {\r\n    const nvo_monto = `${monto}${number}`;\r\n    setMonto(nvo_monto);\r\n  };\r\n\r\n  const increaseAfterComma = () => setAfterComma(afterComma + 1);\r\n\r\n  const handleKeyPress = (e, number) => {\r\n    switch (number) {\r\n      case \".\":\r\n        if (monto.length === 0 && !hasComma) {\r\n          appendNumberToInput(\"0.\");\r\n          setHasComma(true);\r\n        } else if (!hasComma) {\r\n          appendNumberToInput(\".\");\r\n          setHasComma(true);\r\n        }\r\n        break;\r\n\r\n      case \"x\":\r\n        setMonto(\"\");\r\n        setHasComma(false);\r\n        setAfterComma(0);\r\n        break;\r\n\r\n      default:\r\n        if (!hasComma) {\r\n          appendNumberToInput(number);\r\n        } else {\r\n          if (afterComma < 2) {\r\n            appendNumberToInput(number);\r\n            increaseAfterComma();\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSendPayment = () => {\r\n    //Varias cosas:\r\n    //1) Valida que el monto a mandar no sea mayor al saldo del usuario.\r\n    //2) Valida que el usuario haya introducido un monto.\r\n    //3) Envía el dinero al usuario (backend)\r\n    //4) Devuelve al menú principal\r\n    if (monto.length !== 0) {\r\n      Swal.fire({\r\n        title: `¿Enviarle ₩${monto} a ${user}?`,\r\n        confirmButtonColor: \"#71945B\",\r\n        cancelButtonColor: \"#B85B28\",\r\n        confirmButtonText: \"Sí\",\r\n        cancelButtonText: \"No\",\r\n        showCancelButton: true,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          Swal.fire({\r\n            title: `Enviaste ₩${monto} a ${user}`,\r\n            confirmButtonColor: \"#71945B\",\r\n            confirmButtonText: \"Aceptar\",\r\n          });\r\n          handleBackButtonClick();\r\n        }\r\n      });\r\n    } else {\r\n      toast.error(\"Introduzca el monto a enviar\", {\r\n        position: \"top-right\",\r\n        autoClose: 3500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBackButtonClick = () => history.push(bank ? \"/bank\" : \"/game\")\r\n\r\n  const buttons = {\r\n    leftButton: {\r\n      text: \"Atrás\",\r\n      action: handleBackButtonClick\r\n    },\r\n    rightButton: {\r\n      text: \"Enviar\",\r\n      action: handleSendPayment,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <section className=\"section is-centered\">\r\n      <div className=\"container\">\r\n        <Logo mb=\"1\" />\r\n        <div className=\"level is-mobile has-text-black\">\r\n          <div className=\"level-item\">\r\n            <div className=\"level-left\">\r\n              <strong className=\"mr-2\">Enviando a:</strong> {user}\r\n            </div>\r\n          </div>\r\n          <div className=\"level-item\">\r\n            <div className=\"level-right\">\r\n              <strong className=\"mr-2\">{bank ? `Saldo de ${user}:` : \"Tu saldo es:\"}</strong> ₩{saldoActual}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"columns is-mobile is-centered is-half mb-3\">\r\n          <div className=\"column is-two-thirds\">\r\n            <input className=\"input is-size-2\" value={`₩ ${monto}`} readOnly />\r\n          </div>\r\n        </div>\r\n\r\n        <Keyboard onKeyPress={(e, n) => handleKeyPress(e, n)} />\r\n\r\n        <BottomButtons {...buttons} />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SendMoney;\r\n","import PlayerGroup from \"../../components/PlayerGroup\";\nimport BottomButtons from \"../../components/BottomButtons\";\nimport Logo from \"../../components/Logo\";\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Bankrupt = () => {\n  let history = useHistory();\n\n  const handleBankruptcy = (who) => {\n    Swal.fire({\n      title: `¿Estás seguro que te quebró ${who}?`,\n      confirmButtonColor: \"#71945B\",\n      cancelButtonColor: \"#B85B28\",\n      confirmButtonText: \"Sí\",\n      cancelButtonText: \"No\",\n      showCancelButton: true,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        history.push(\"/gameover\");\n      }\n    });\n  };\n\n  const players = [\n    {\n      playerName: \"ANYI\",\n      token: \"http://placekitten.com/128/129\",\n      amount: \"null\",\n      action: () => handleBankruptcy(\"ANYI\"),\n    },\n    {\n      playerName: \"AJAV06\",\n      token: \"http://placekitten.com/129/128\",\n      amount: \"null\",\n      action: () => handleBankruptcy(\"AJAV06\"),\n    },\n    {\n      playerName: \"JONABB\",\n      token: \"http://placekitten.com/127/128\",\n      amount: \"null\",\n      action: () => handleBankruptcy(\"JONABB\"),\n    },\n    {\n      playerName: \"BANCO\",\n      token: \"http://placekitten.com/128/127\",\n      amount: \"null\",\n      action: () => handleBankruptcy(\"BANCO\"),\n    },\n  ];\n\n  const buttons = {\n    leftButton: {\n        link:\"game\",\n        text:\"Atrás\"\n    },\n  };\n\n  return (\n    <section className=\"section is-centered\">\n      <div className=\"container has-text-black has-text-centered\">\n        <Logo mb=\"2\" />\n        <h1 class=\"title is-3\" style={{ marginBottom: \"-0.5rem\" }}>\n          ¿Quién te llevó a la bancarrota?\n        </h1>\n        <PlayerGroup players={players} />\n        <BottomButtons {...buttons} />\n      </div>\n    </section>\n  );\n};\n\nexport default Bankrupt;\n","import Logo from \"../../components/Logo\";\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router-dom\";\nimport PlayerGroup from \"../../components/PlayerGroup\";\nimport BottomButtons from \"../../components/BottomButtons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAddressBook,\n  faHourglassEnd,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Bank = () => {\n  let history = useHistory();\n\n  const showBankerOptions = (user) => {\n    Swal.fire({\n      title: \"¿Que quieres hacer?\",\n      showCloseButton: true,\n      showDenyButton: true,\n      showCancelButton: true,\n      denyButtonColor: \"green\",\n      confirmButtonText: `Pass Go`,\n      denyButtonText: `Cobrar`,\n      cancelButtonText: \"Pagar\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\"Pagado!\", \"\", \"success\");\n      } else if (result.isDenied) {\n        handleWithdrawingMoney(user);\n      } else if (result.isDismissed) {\n        handleSendingMoney(user);\n      }\n    });\n  };\n\n  const handleWithdrawingMoney = (user) => {\n    history.push(`/withdraw/${user}`);\n  };\n\n  const handleSendingMoney = (user) => {\n    history.push(`/send/${user}/t`);\n  };\n\n  const players = [\n    {\n      playerName: \"GABOX\",\n      token: \"http://placekitten.com/128/128\",\n      amount: \"1000\",\n      action: () => showBankerOptions(\"GABOX\"),\n    },\n    {\n      playerName: \"ANYI\",\n      token: \"http://placekitten.com/128/129\",\n      amount: \"2000\",\n      action: () => showBankerOptions(\"ANYI\"),\n    },\n    {\n      playerName: \"AJAV06\",\n      token: \"http://placekitten.com/129/128\",\n      amount: \"1000\",\n      action: () => showBankerOptions(\"AJAV06\"),\n    },\n    {\n      playerName: \"JONABB\",\n      token: \"http://placekitten.com/127/128\",\n      amount: \"2000\",\n      action: () => showBankerOptions(\"JONABB\"),\n    },\n  ];\n\n  const handleHistoryClick = () => {\n    history.push(\"/history/\");\n  };\n\n  const handleFinishGameClick = () => {\n    Swal.fire({\n      title: \"¿Estás seguro de que quieres finalizar?\",\n      confirmButtonColor: \"green\",\n      confirmButtonText: \"Sí\",\n      cancelButtonColor: \"red\",\n      cancelButtonText: \"No\",\n      showCancelButton: true,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire({\n          title: \"Esperando confirmación.\",\n          confirmButtonColor: \"green\",\n          confirmButtonText: \"Sí\",\n          cancelButtonColor: \"red\",\n          cancelButtonText: \"No\",\n          showCancelButton: true,\n        }).then((result) => {\n          if (result.isConfirmed) {\n            Swal.fire({\n              title: \"Partida finalizada con éxito\",\n              confirmButtonColor: \"green\",\n              confirmButtonText: \"Aceptar\",\n            });\n            history.push(\"/winner\");\n          } else if (result.isDismissed) {\n            Swal.fire({\n              title: \"¡Han rechazado el fin del juego!\",\n              confirmButtonColor: \"green\",\n              confirmButtonText: \"Aceptar\",\n            });\n          }\n        });\n      }\n    });\n  };\n\n  const buttons = {\n    leftButton: {\n      text: <FontAwesomeIcon icon={faAddressBook} />,\n      action: handleHistoryClick,\n    },\n    rightButton: {\n      text: <FontAwesomeIcon icon={faHourglassEnd} />,\n      action: handleFinishGameClick,\n    },\n  };\n  return (\n    <section className=\"section is-centered\">\n      <div className=\"container\">\n        <Logo />\n        <PlayerGroup players={players} />\n        <BottomButtons {...buttons} />\n      </div>\n    </section>\n  );\n};\nexport default Bank;\n","import Logo from \"../../components/Logo\";\nimport Player from \"../../components/Player\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\n\nconst GameOver = () => {\n    let history = useHistory();\n\n  const handleHomeButtonClick = () => {\n    history.push(\"/monopoly-e-wallet/\");\n  };\n\n  return (\n    <section className=\"section is-centered\">\n      <div className=\"container is-centered has-text-centered\">\n        <Logo mb=\"2\" />\n        <h1 className=\"title is-2\">FIN DEL JUEGO</h1>\n        <h1 className=\"title is-3\">Te quebró ANYI</h1>\n        <Player\n          playerName=\"ANYI\"\n          token=\"http://placekitten.com/128/129\"\n          amount=\"null\"\n          gameover\n        />\n        <button\n          className=\"button is-rounded is-large mt-5\"\n          onClick={handleHomeButtonClick}\n        >\n          <span className=\"icon is-medium\">\n            <FontAwesomeIcon icon={faHome}/>\n          </span>\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default GameOver;\n","import Logo from \"../../components/Logo\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\nimport PlayerGroup from \"../../components/PlayerGroup\";\n\nconst WinnerWinnerChickenDinner = () => {\n    let history = useHistory();\n\n  const handleHomeButtonClick = () => {\n    history.push(\"/monopoly-e-wallet/\");\n  };\n\n  const players = [\n    {\n      playerName: \"GABOX\",\n      token: \"http://placekitten.com/128/128\",\n      amount: \"1000\",\n    },\n    {\n      playerName: \"ANYI\",\n      token: \"http://placekitten.com/128/129\",\n      amount: \"~2000\",\n    },\n    {\n      playerName: \"AJAV06\",\n      token: \"http://placekitten.com/129/128\",\n      amount: \"~1000\",\n    },\n    {\n      playerName: \"JONABB\",\n      token: \"http://placekitten.com/127/128\",\n      amount: \"~2000\",\n    },\n  ];\n\n  return (\n    <section className=\"section is-centered\">\n      <div className=\"container is-centered has-text-centered\">\n        <Logo mb=\"2\" />\n        <h1 className=\"title is-2\">FIN DEL JUEGO</h1>\n        <h1 className=\"title is-3\">ANYI es el ganador</h1>\n        <PlayerGroup \n        players={players}\n        winner=\"ANYI\"/>\n        <button\n          className=\"button is-rounded is-large mt-5\"\n          onClick={handleHomeButtonClick}\n        >\n          <span className=\"icon is-medium\">\n            <FontAwesomeIcon icon={faHome}/>\n          </span>\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default WinnerWinnerChickenDinner;\n","import { useState } from \"react\";\nimport Keyboard from \"../../components/Keyboard\";\nimport Logo from \"../../components/Logo\";\nimport BottomButtons from \"../../components/BottomButtons\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { toast } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst WithdrawMoney = () => {\n  let history = useHistory();\n\n  const [monto, setMonto] = useState(\"\");\n  const [hasComma, setHasComma] = useState(false);\n  const [afterComma, setAfterComma] = useState(0);\n\n  const {user} = useParams();\n  const saldoActual = \"1.000\";\n\n  const appendNumberToInput = (number) => {\n    const nvo_monto = `${monto}${number}`;\n    setMonto(nvo_monto);\n  };\n\n  const increaseAfterComma = () => setAfterComma(afterComma + 1);\n\n  const handleKeyPress = (e, number) => {\n    switch (number) {\n      case \".\":\n        if (monto.length === 0 && !hasComma) {\n          appendNumberToInput(\"0.\");\n          setHasComma(true);\n        } else if (!hasComma) {\n          appendNumberToInput(\".\");\n          setHasComma(true);\n        }\n        break;\n\n      case \"x\":\n        setMonto(\"\");\n        setHasComma(false);\n        setAfterComma(0);\n        break;\n\n      default:\n        if (!hasComma) {\n          appendNumberToInput(number);\n        } else {\n          if (afterComma < 2) {\n            appendNumberToInput(number);\n            increaseAfterComma();\n          }\n        }\n        break;\n    }\n  };\n\n  const handleWithdrawPayment = () => {\n    //Varias cosas:\n    //1) Valida que el monto a mandar no sea mayor al saldo del usuario.\n    //2) Valida que el usuario haya introducido un monto.\n    //3) Envía el dinero al usuario (backend)\n    //4) Devuelve al menú principal\n    if (monto.length !== 0) {\n      Swal.fire({\n        title: `¿Cobrarle ₩${monto} a ${user}?`,\n        confirmButtonColor: \"#71945B\",\n        cancelButtonColor: \"#B85B28\",\n        confirmButtonText: \"Sí\",\n        cancelButtonText: \"No\",\n        showCancelButton: true,\n      }).then((result) => {\n        if (result.isConfirmed) {\n          Swal.fire({\n            title: `Cobraste ₩${monto} a ${user}`,\n            confirmButtonColor: \"#71945B\",\n            confirmButtonText: \"Aceptar\",\n          });\n          history.push(\"/bank\");\n        }\n      });\n    } else {\n      toast.error(\"Introduzca el monto a cobrar\", {\n        position: \"top-right\",\n        autoClose: 3500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  };\n\n  const handleBackButtonClick = () => history.push(\"/bank\");\n\n  const buttons = {\n    leftButton: {\n      text: \"Atrás\",\n      action: handleBackButtonClick\n    },\n    rightButton: {\n      text: \"Cobrar\",\n      action: handleWithdrawPayment,\n    },\n  };\n\n  return (\n    <section className=\"section is-centered\">\n      <div className=\"container\">\n        <Logo mb=\"1\" />\n        <div className=\"level is-mobile has-text-black\">\n          <div className=\"level-item\">\n            <div className=\"level-left\">\n              <strong className=\"mr-2\">Cobrando a:</strong> {user}\n            </div>\n          </div>\n          <div className=\"level-item\">\n            <div className=\"level-right\">\n              <strong className=\"mr-2\">Saldo de {user}:</strong>  ₩{saldoActual}\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-mobile is-centered is-half mb-3\">\n          <div className=\"column is-two-thirds\">\n            <input className=\"input is-size-2 has-text-centered\" value={`₩ ${monto}`} readOnly />\n          </div>\n        </div>\n\n        <Keyboard onKeyPress={(e, n) => handleKeyPress(e, n)} />\n\n        <BottomButtons {...buttons} />\n      </div>\n    </section>\n  );\n};\n\nexport default WithdrawMoney;","const TransactionsTable = ({ transactions }) => {\n  return (\n    <table className=\"table is-small\">\n      <thead>\n        <tr>\n          <th>Nro</th>\n          <th>Envió</th>\n          <th>Recibió</th>\n          <th>Monto</th>\n          <th>Hora</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions?.map((value) => (\n          <tr>\n            <td>{value.index}</td>\n            <td>{value.sender}</td>\n            <td>{value.receiver}</td>\n            <td>₩{value.amount}</td>\n            <td>{value.hour}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default TransactionsTable;\n","import { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBackward, faAmbulance } from \"@fortawesome/free-solid-svg-icons\";\nimport BottomButtons from \"../../components/BottomButtons\";\nimport TransactionsTable from \"../../components/TransactionsTable\";\nimport Logo from \"../../components/Logo\";\nimport Swal from \"sweetalert2\";\n\nconst History = () => {\n  let history = useHistory();\n\n  const transactions = [\n    {\n      index: \"4\",\n      sender: \"ANYI\",\n      receiver: \"GABOX\",\n      amount: \"1000\",\n      hour: \"04:44 p.m.\",\n    },\n    {\n      index: \"3\",\n      sender: \"AJAV06\",\n      receiver: \"GABOX\",\n      amount: \"125\",\n      hour: \"04:42 p.m.\",\n    },\n    {\n      index: \"2\",\n      sender: \"JONABB\",\n      receiver: \"AJAV06\",\n      amount: \"2500\",\n      hour: \"04:38 p.m.\",\n    },\n    {\n      index: \"1\",\n      sender: \"GABOX\",\n      receiver: \"ANYI\",\n      amount: \"37\",\n      hour: \"04:34 p.m.\",\n    },\n  ];\n\n  const buttons = {\n    leftButton: {\n      text: <FontAwesomeIcon icon={faBackward} />,\n      action: () => history.push(\"/bank\"),\n    },\n    rightButton: {\n      text: <FontAwesomeIcon icon={faAmbulance} />,\n      action: () => Swal.fire(\"AUXILIO ME DESMAYO CALLESE VIEJO LESBIANO\"),\n    },\n  };\n\n  return (\n    <section className=\"section is-centered\">\n      <div className=\"container\">\n        <Logo mb=\"0\" />\n        <BottomButtons {...buttons} />\n        <TransactionsTable transactions={transactions} />\n      </div>\n    </section>\n  );\n};\n\nexport default History;\n","import Index from \"./views/Index\";\r\nimport \"./style/app.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Game from \"./views/Game\";\r\nimport SendMoney from \"./views/SendMoney\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Bankrupt from \"./views/Bankrupt\";\r\nimport Bank from \"./views/Bank\";\r\nimport GameOver from \"./views/GameOver\";\r\nimport WinnerWinnerChickenDinner from \"./views/WinnerWinnerChickenDinner\";\r\nimport WithdrawMoney from \"./views/WithdrawMoney\";\r\nimport History from \"./views/History\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/monopoly-e-wallet/\" exact>\r\n          <Index />\r\n        </Route>\r\n        <Route path=\"/game/\" exact>\r\n          <Game />\r\n        </Route>\r\n        <Route path=\"/send/:user/:bank?\">\r\n          <SendMoney />\r\n        </Route>\r\n        <Route path=\"/bankrupt/\" exact>\r\n          <Bankrupt />\r\n        </Route>\r\n        <Route path=\"/bank/\" exact>\r\n          <Bank />\r\n        </Route>\r\n        <Route path=\"/gameover/\" exact>\r\n          <GameOver />\r\n        </Route>\r\n        <Route path=\"/winner/\" exact>\r\n          <WinnerWinnerChickenDinner />\r\n        </Route>\r\n        <Route path=\"/withdraw/:user\" exact>\r\n          <WithdrawMoney />\r\n        </Route>\r\n        <Route path=\"/history/\" exact>\r\n          <History />\r\n        </Route>\r\n      </Switch>\r\n      <ToastContainer />\r\n    </Router>\r\n  );\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}