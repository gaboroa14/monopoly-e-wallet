{"version":3,"sources":["views/Index/index.js","views/Game/index.js","views/SendMoney/index.js","views/Bank/index.js","views/WithdrawMoney/index.js","views/History/index.js","components/Button/index.js","components/Logo/logo.png","components/Logo/index.js","components/PlayerName/index.js","components/Footer/marvel.png","components/Footer/kuro.png","components/Footer/index.js","config.js","components/Player/index.js","components/PlayerGroup/index.js","components/Keyboard/Key.js","components/Keyboard/index.js","components/BottomButtons/index.js","views/Bankrupt/index.js","views/GameOver/index.js","views/WinnerWinnerChickenDinner/index.js","components/TransactionsTable/index.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["socket","Button","text","color","action","size","className","onClick","Logo","mb","width","style","marginTop","alt","src","logo","PlayerName","name","onTextChange","letterSpacing","value","onChange","e","Footer","marvel","kuro","config","ENDPOINT","Index","useState","Math","random","toString","substr","playerName","setPlayerName","history","useHistory","JSON","parse","localStorage","getItem","room","init","avatar","push","useEffect","io","off","on","response","Swal","getHtmlContainer","quantity","enableButtons","innerHTML","fire","title","confirmButtonText","removeItem","u","setItem","stringify","close","validateField","height","target","emit","user","error","_id","confirmButtonColor","cancelButtonColor","cancelButtonText","showCancelButton","showConfirmButton","then","result","isConfirmed","denyButtonColor","denyButtonText","showDenyButton","icon","isDismissed","showLoading","getDenyButton","input","inputAttributes","length","username","room_id","toUpperCase","isDenied","FontAwesomeIcon","require","Player","ico","amount","gameover","winner","winnerScreen","faPiggyBank","faCat","faDog","faShip","faCar","faQuestion","undefined","borderStyle","borderColor","borderWidth","boxShadow","borderRadius","PlayerGroup","players","map","index","Game","users","setUsers","item","showCurrentAmount","handleSendingMoney","res","myUser","to_user","toast","dark","console","log","find","faAirFreshener","to","faSadCry","Key","number","Keyboard","onKeyPress","BottomButtons","leftButton","rightButton","SendMoney","useParams","bank","monto","setMonto","hasComma","setHasComma","afterComma","setAfterComma","appendNumberToInput","nvo_monto","handleKeyPress","handleBackButtonClick","buttons","faAngleLeft","faHandHoldingUsd","user_id","setTimeout","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","readOnly","n","Bankrupt","handleBankruptcy","who","token","class","marginBottom","link","Bank","pedirUsuarios","showBankerOptions","showCloseButton","handleWithdrawingMoney","faAddressBook","faHourglassEnd","GameOver","faHome","WinnerWinnerChickenDinner","WithdrawMoney","faShare","TransactionsTable","transactions","type","sender","receiver","hour","History","setTransactions","createdAt","faReceipt","App","path","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.573c607d.chunk.js","sourcesContent":["import Button from \"../../components/Button\";\r\nimport Logo from \"../../components/Logo\";\r\nimport PlayerName from \"../../components/PlayerName\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport config from \"../../config\";\r\n\r\nlet socket;\r\n\r\nconst Index = () => {\r\n  const [playerName, setPlayerName] = useState(Math.random().toString(36).substr(2,4));\r\n\r\n  let history = useHistory();\r\n\r\n  // REDIRECCIÓN SI EL USUARIO YA ESTÁ EN UNA PARTIDA\r\n  if (\r\n    JSON.parse(localStorage.getItem(\"user\"))?.room.init &&\r\n    JSON.parse(localStorage.getItem(\"user\")).avatar === \"bank\"\r\n  ) {\r\n    history.push(\"/bank\");\r\n  } else if (JSON.parse(localStorage.getItem(\"user\"))?.room.init) {\r\n    history.push(\"/game\");\r\n  }\r\n\r\n  // CONEXIÓN CON EL BACKEND\r\n  useEffect(() => {\r\n    socket = io(config.ENDPOINT);\r\n    return () => {\r\n      //socket.emit(\"disconnect\");\r\n      socket.off();\r\n    };\r\n  }, []);\r\n\r\n  // MÉTODOS PARA GESTIONAR CONEXIONES CON EL WEBSOCKET\r\n\r\n  // Personas se unen a la partida.\r\n  useEffect(() => {\r\n    socket.on(\"joined\", (response) => {\r\n      if (Swal.getHtmlContainer()) {\r\n        if (response.quantity >= 3) Swal.enableButtons();\r\n        Swal.getHtmlContainer().innerHTML = `Esperando jugadores. ${\r\n          response.quantity\r\n        } persona${response.quantity !== 1 ? \"s\" : \"\"} se ha${\r\n          response.quantity !== 1 ? \"n\" : \"\"\r\n        } unido.`;\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // Personas se unen a la partida.\r\n  useEffect(() => {\r\n    socket.on(\"person-join-left\", (response) => {\r\n      if (Swal.getHtmlContainer()) {\r\n        if (response.quantity >= 3) Swal.enableButtons();\r\n        Swal.getHtmlContainer().innerHTML = `Esperando jugadores. ${\r\n          response.quantity\r\n        } persona${response.quantity !== 1 ? \"s\" : \"\"} se ha${\r\n          response.quantity !== 1 ? \"n\" : \"\"\r\n        } unido.`;\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // Se borra la partida.\r\n  useEffect(() => {\r\n    socket.on(\"room-deleted\", () => {\r\n      Swal.fire({\r\n        title: \"Se ha cerrado la sala.\",\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n      localStorage.removeItem(\"user\");\r\n    });\r\n  }, []);\r\n\r\n  // Se inicia la partida.\r\n  useEffect(() => {\r\n    socket.on(\"game-begun\", () => {\r\n      let u = JSON.parse(localStorage.getItem(\"user\"));\r\n      u.room.init = true;\r\n      localStorage.setItem(\"user\", JSON.stringify(u));\r\n      Swal.close();\r\n      history.push(\r\n        JSON.parse(localStorage.getItem(\"user\")).avatar === \"bank\"\r\n          ? \"/bank\"\r\n          : \"/game\"\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  // VALIDACIÓN DEL NOMBRE\r\n  const validateField = () => {\r\n    if (playerName === \"\") {\r\n      Swal.fire({\r\n        title: \"¡Debes introducir un nombre!\",\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n      return false;\r\n    } else return true;\r\n  };\r\n\r\n  // CREAR UNA SALA\r\n  const handleCreateClick = () => {\r\n    // Conectar con el backend para crear una sala.\r\n    // Devuelve un objeto de tipo user que se guarda en localStorage.\r\n\r\n    if (!validateField()) return;\r\n\r\n    socket.emit(\"create-room\", playerName, ({user, quantity, error}) => {\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n      Swal.fire({\r\n        title: `El código de la sala es: ${user.room._id}`,\r\n        text: `Esperando jugadores. 1 persona se ha unido.`,\r\n        confirmButtonColor: \"#71945B\",\r\n        cancelButtonColor: \"#B85B28\",\r\n        confirmButtonText: \"Comenzar\",\r\n        cancelButtonText: \"Cancelar\",\r\n        showCancelButton: true,\r\n        showConfirmButton: true,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          Swal.fire({\r\n            title: \"¿Está seguro que desea comenzar la partida?\",\r\n            confirmButtonColor: \"#71945B\",\r\n            denyButtonColor: \"#B85B28\",\r\n            confirmButtonText: \"Sí\",\r\n            denyButtonText: \"No\",\r\n            showDenyButton: true,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              socket.emit(\r\n                \"begin-game\",\r\n                JSON.parse(localStorage.getItem(\"user\")).room._id, (error) => {\r\n                  if (error)\r\n                  Swal.fire({\r\n                    title: `Error: ${error}`,\r\n                    icon: 'warning'\r\n                  })\r\n                }\r\n              );\r\n            }\r\n          });\r\n        } else if (\r\n          result.isDismissed &&\r\n          JSON.parse(localStorage.getItem(\"user\"))\r\n        ) {\r\n          // socket.emit(\r\n          //   \"delete-room\",\r\n          //   JSON.parse(localStorage.getItem(\"user\")).room._id\r\n          // );\r\n        }\r\n      });\r\n      Swal.showLoading(Swal.getDenyButton());\r\n    });\r\n  };\r\n\r\n  const handleJoinClick = () => {\r\n    if (!validateField()) return;\r\n    Swal.fire({\r\n      title: \"Introduzca el código de la sala: \",\r\n      input: \"text\",\r\n      inputAttributes: {\r\n        value: \"ldkj\",\r\n      },\r\n    }).then((result) => {\r\n      if (result.value.length !== 3) {\r\n        Swal.fire({\r\n          title: \"Debe introducir un código válido\",\r\n          confirmButtonColor: \"#71945B\",\r\n          confirmButtonText: \"Aceptar\",\r\n        });\r\n      } else {\r\n        socket.emit(\r\n          \"join\",\r\n          { username: playerName, room_id: result.value },\r\n          ({ error, user, quantity }) => {\r\n            if (error) {\r\n              Swal.fire({\r\n                title: `Error: ${error}`,\r\n                confirmButtonText: \"Aceptar\",\r\n                icon: \"warning\",\r\n              });\r\n              return;\r\n            }\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n            Swal.fire({\r\n              title: `El código de la sala es: ${result.value.toUpperCase()}`,\r\n              text: `Esperando jugadores. ${quantity} persona${\r\n                quantity !== 1 ? \"s\" : \"\"\r\n              } se ha${quantity !== 1 ? \"n\" : \"\"} unido.`,\r\n              denyButtonColor: \"#B85B28\",\r\n              denyButtonText: \"Cancelar\",\r\n              showDenyButton: true,\r\n              showConfirmButton: false,\r\n            }).then((result) => {\r\n              if (result.isDenied) {\r\n                socket.emit(\"delete-user\", user._id, (response) => {\r\n                  localStorage.removeItem(\"user\");\r\n                });\r\n              }\r\n            });\r\n            Swal.showLoading();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section\r\n      className=\"section is-centered has-background-danger\"\r\n      style={{ height: \"100%\" }}\r\n    >\r\n      <div className=\"container\">\r\n        <Logo mb=\"6\" />\r\n        <PlayerName\r\n          name={playerName}\r\n          onTextChange={(e) => setPlayerName(e.target.value)}\r\n        />\r\n        <div className=\"buttons is-centered mt-6 mb-6\">\r\n          <Button\r\n            text=\"Crear\"\r\n            color=\"primary\"\r\n            action={handleCreateClick}\r\n            size=\"large\"\r\n          />\r\n          <Button\r\n            text=\"Unirse\"\r\n            color=\"link\"\r\n            action={handleJoinClick}\r\n            size=\"large\"\r\n          />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n      <div className=\"hero has-background-danger\">\r\n        <div className=\"hero-body\"></div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import Logo from \"../../components/Logo\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport PlayerGroup from \"../../components/PlayerGroup\";\r\nimport io from \"socket.io-client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { faSadCry, faAirFreshener } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport config from \"../../config\";\r\nimport Button from \"../../components/Button\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nlet socket;\r\n\r\nconst Game = () => {\r\n  let history = useHistory();\r\n\r\n  let user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [users, setUsers] = useState([]);\r\n\r\n  if (!user) history.push(\"/monopoly-e-wallet\");\r\n  else if (user.avatar === \"bank\") history.push(\"/bank\");\r\n\r\n  // CONEXIÓN CON EL BACKEND\r\n  useEffect(() => {\r\n    socket = io(config.ENDPOINT);\r\n    const u = JSON.parse(localStorage.getItem(\"user\"));\r\n    socket.emit(\r\n      \"join\",\r\n      { username: u.username, room_id: u.room._id },\r\n      ({ error, user, quantity }) => {\r\n        if (user) {\r\n          localStorage.setItem(\"user\", JSON.stringify(user));\r\n        }\r\n      }\r\n    );\r\n    return () => {\r\n      //socket.emit(\"disconnect\");\r\n      socket.off();\r\n    };\r\n  }, []);\r\n\r\n  // OBTENER LOS USUARIOS POR PRIMERA VEZ\r\n  useEffect(() => {\r\n    socket.emit(\"get-users\", user?.room._id, (response) => {\r\n      response = response.map((item) => {\r\n        return {\r\n          username: item.username,\r\n          avatar: item.avatar,\r\n          amount: item.amount,\r\n          action:\r\n            JSON.parse(localStorage.getItem(\"user\")).username === item.username\r\n              ? showCurrentAmount\r\n              : () => handleSendingMoney(item.username),\r\n        };\r\n      });\r\n      setUsers(response);\r\n    });\r\n  }, []);\r\n\r\n  // ESCUCHAR LAS TRANSACCIONES DE CARGA\r\n  useEffect(() => {\r\n    socket.on(\"transaction\", (res) => {\r\n      const myUser = JSON.parse(localStorage.getItem(\"user\"));\r\n      if (res.to_user === myUser.username) {\r\n        toast.dark(`${res.username} te ha enviado ₩${res.amount}`);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // ESCUCHAR LAS TRANSACCIONES DE COBRO\r\n  useEffect(() => {\r\n    socket.on(\"debit\", (res) => {\r\n      const myUser = JSON.parse(localStorage.getItem(\"user\"));\r\n      if (res.to_user === myUser.username) {\r\n        toast.dark(`El banco te ha cobrado ₩${res.amount}`);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // ESCUCHAR LAS ACTUALIZACIONES EN LOS USUARIOS\r\n  useEffect(() => {\r\n    socket.on(\"users-list\", (response) => {\r\n      console.log(response);\r\n      user = response.find(\r\n        (item) => item._id == JSON.parse(localStorage.getItem(\"user\"))._id\r\n      );\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n      response = response.map((item) => {\r\n        return {\r\n          username: item.username,\r\n          avatar: item.avatar,\r\n          amount: item.amount,\r\n          action:\r\n            JSON.parse(localStorage.getItem(\"user\")).username === item.username\r\n              ? showCurrentAmount\r\n              : () => handleSendingMoney(item.username),\r\n        };\r\n      });\r\n      setUsers(response);\r\n    });\r\n  }, []);\r\n\r\n  const showCurrentAmount = () => {\r\n    Swal.fire({\r\n      title: `Su saldo es ₩${user.amount}`,\r\n      confirmButtonColor: \"#71945B\",\r\n      confirmButtonText: \"Aceptar\",\r\n    });\r\n  };\r\n\r\n  const handleSendingMoney = (user) => {\r\n    history.push(`/send/${user}`);\r\n  };\r\n\r\n  return (\r\n    <section className=\"section is-centered\">\r\n      <div className=\"container\">\r\n        <Logo />\r\n        <PlayerGroup players={users} key=\"0\" />\r\n\r\n        <div className=\"columns is-mobile is-half is-centered has-text-centered\">\r\n          <Button\r\n            action={() => {\r\n              localStorage.removeItem(\"user\");\r\n              history.push(\"/monopoly-e-wallet/\");\r\n            }}\r\n            text={<FontAwesomeIcon icon={faAirFreshener} />}\r\n          />\r\n          <div className=\"column is-12\">\r\n            <Link to=\"/bankrupt/\">\r\n              <div className=\"box is-size-1 has-text-black\">\r\n                <FontAwesomeIcon icon={faSadCry} />\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import { useState, useEffect } from \"react\";\r\nimport Keyboard from \"../../components/Keyboard\";\r\nimport Logo from \"../../components/Logo\";\r\nimport BottomButtons from \"../../components/BottomButtons\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { io } from \"socket.io-client\";\r\nimport config from \"../../config\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAngleLeft,\r\n  faHandHoldingUsd,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlet socket;\r\n\r\nconst SendMoney = () => {\r\n  let history = useHistory();\r\n\r\n  let currentUser = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  if (!currentUser) history.push(\"/monopoly-e-wallet\");\r\n\r\n  // CONEXIÓN CON EL BACKEND\r\n  useEffect(() => {\r\n    socket = io(config.ENDPOINT);\r\n    return () => {\r\n      //socket.emit(\"disconnect\");\r\n      socket.off();\r\n    };\r\n  }, []);\r\n\r\n  const { user, bank } = useParams();\r\n\r\n  const saldoActual = \"1.000\";\r\n\r\n  const [monto, setMonto] = useState(\"\");\r\n  const [hasComma, setHasComma] = useState(false);\r\n  const [afterComma, setAfterComma] = useState(0);\r\n\r\n  const appendNumberToInput = (number) => {\r\n    const nvo_monto = `${monto}${number}`;\r\n    setMonto(nvo_monto);\r\n  };\r\n\r\n  const increaseAfterComma = () => setAfterComma(afterComma + 1);\r\n\r\n  const handleKeyPress = (e, number) => {\r\n    switch (number) {\r\n      case \".\":\r\n        if (monto.length === 0 && !hasComma) {\r\n          appendNumberToInput(\"0.\");\r\n          setHasComma(true);\r\n        } else if (!hasComma) {\r\n          appendNumberToInput(\".\");\r\n          setHasComma(true);\r\n        }\r\n        break;\r\n\r\n      case \"x\":\r\n        setMonto(\"\");\r\n        setHasComma(false);\r\n        setAfterComma(0);\r\n        break;\r\n\r\n      default:\r\n        if (!hasComma) {\r\n          appendNumberToInput(number);\r\n        } else {\r\n          if (afterComma < 2) {\r\n            appendNumberToInput(number);\r\n            increaseAfterComma();\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSendPayment = () => {\r\n    //Varias cosas:\r\n    //1) Valida que el monto a mandar no sea mayor al saldo del usuario.\r\n    //2) Valida que el usuario haya introducido un monto.\r\n    //3) Envía el dinero al usuario (backend)\r\n    //4) Devuelve al menú principal\r\n    if (!bank && monto > JSON.parse(localStorage.getItem(\"user\")).amount) {\r\n      Swal.fire(\"te falta cobre\");\r\n      return;\r\n    }\r\n    if (monto.length !== 0) {\r\n      Swal.fire({\r\n        title: `¿Enviarle ₩${monto} a ${user}?`,\r\n        confirmButtonColor: \"#71945B\",\r\n        cancelButtonColor: \"#B85B28\",\r\n        confirmButtonText: \"Sí\",\r\n        cancelButtonText: \"No\",\r\n        showCancelButton: true,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          socket.emit(\"send-transaction\", {\r\n            user_id: JSON.parse(localStorage.getItem(\"user\"))._id,\r\n            amount: monto,\r\n            room_id: JSON.parse(localStorage.getItem(\"user\")).room._id,\r\n            to_user: user,\r\n          });\r\n          Swal.fire({\r\n            title: `Enviaste ₩${monto} a ${user}`,\r\n            confirmButtonColor: \"#71945B\",\r\n            confirmButtonText: \"Aceptar\",\r\n          });\r\n          setTimeout(() => handleBackButtonClick(), 500);\r\n        }\r\n      });\r\n    } else {\r\n      toast.error(\"Introduzca el monto a enviar\", {\r\n        position: \"top-right\",\r\n        autoClose: 3500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBackButtonClick = () => history.push(bank ? \"/bank\" : \"/game\");\r\n\r\n  const buttons = {\r\n    leftButton: {\r\n      text: <FontAwesomeIcon icon={faAngleLeft} />,\r\n      action: handleBackButtonClick,\r\n    },\r\n    rightButton: {\r\n      text: <FontAwesomeIcon icon={faHandHoldingUsd} />,\r\n      action: handleSendPayment,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <section className=\"section is-centered\">\r\n      <div className=\"container\">\r\n        <Logo mb=\"1\" />\r\n        <div className=\"level is-mobile has-text-black\">\r\n          <div className=\"level-item\">\r\n            <div className=\"level-left\">\r\n              <strong className=\"mr-2\">Enviando a:</strong> {user}\r\n            </div>\r\n          </div>\r\n          <div className=\"level-item\">\r\n            <div className=\"level-right\">\r\n              <strong className=\"mr-2\">\r\n                {bank ? `Saldo de ${user}:` : \"Tu saldo es:\"}\r\n              </strong>{\" \"}\r\n              ₩{saldoActual}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"columns is-mobile is-centered is-half mb-3\">\r\n          <div className=\"column is-two-thirds\">\r\n            <input className=\"input is-size-2\" value={`₩ ${monto}`} readOnly />\r\n          </div>\r\n        </div>\r\n\r\n        <Keyboard onKeyPress={(e, n) => handleKeyPress(e, n)} />\r\n\r\n        <BottomButtons {...buttons} />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SendMoney;\r\n","import Logo from \"../../components/Logo\";\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router-dom\";\nimport PlayerGroup from \"../../components/PlayerGroup\";\nimport BottomButtons from \"../../components/BottomButtons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAddressBook,\n  faHourglassEnd,\n  faAirFreshener,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport config from \"../../config\";\nimport Button from \"../../components/Button\";\nimport { toast } from \"react-toastify\";\n\nlet socket;\n\nconst Bank = () => {\n  let history = useHistory();\n\n  let user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (!user) history.push(\"/monopoly-e-wallet\");\n  else if (user.avatar !== \"bank\") history.push(\"/game\");\n\n  const [users, setUsers] = useState([]);\n\n  // CONEXIÓN CON EL BACKEND\n  useEffect(() => {\n    socket = io(config.ENDPOINT);\n    const u = JSON.parse(localStorage.getItem(\"user\"));\n    socket.emit(\n      \"join\",\n      { username: u.username, room_id: u.room._id },\n      ({ error, user, quantity }) => {\n        if (user) {\n          localStorage.setItem(\"user\", JSON.stringify(user));\n        }\n      }\n    );\n    return () => {\n      //socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, []);\n\n  // ESCUCHAR LAS TRANSACCIONES\n  useEffect(() => {\n    socket.on(\"transaction\", (res) => {\n      toast.dark(`${res.username} le ha enviado ₩${res.amount} a ${res.to_user}`);\n    });\n  }, []);\n\n  const pedirUsuarios = () => {\n    socket.emit(\"get-users\", user?.room._id, (response) => {\n      response = response.map((item) => {\n        return {\n          username: item.username,\n          avatar: item.avatar,\n          amount: item.amount,\n          action: () => showBankerOptions(item.username),\n        };\n      });\n      setUsers(response);\n    });\n  }\n\n  // OBTENIENDO USUARIOS POR PRIMERA VEZ\n  useEffect(() => {\n    pedirUsuarios();\n  }, []);\n\n  // ESCUCHAR LAS ACTUALIZACIONES EN LOS USUARIOS\n  useEffect(() => {\n    socket.on(\"users-list\", (response) => {\n      console.log(response);\n      response = response.map((item) => {\n        return {\n          username: item.username,\n          avatar: item.avatar,\n          amount: item.amount,\n          action: () => showBankerOptions(item.username),\n        };\n      });\n      setUsers(response);\n    });\n  }, []);\n\n  const showBankerOptions = (user) => {\n    Swal.fire({\n      title: \"¿Que quieres hacer?\",\n      showCloseButton: true,\n      showDenyButton: true,\n      showCancelButton: true,\n      denyButtonColor: \"#B85B28\",\n      confirmButtonText: `Pass Go`,\n      denyButtonText: `Cobrar`,\n      cancelButtonText: \"Pagar\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        socket.emit(\"send-transaction\", {\n          user_id: JSON.parse(localStorage.getItem(\"user\"))._id,\n          amount: 200,\n          room_id: JSON.parse(localStorage.getItem(\"user\")).room._id,\n          to_user: user,\n        });\n        Swal.fire({\n          title: `Pass Go enviado a ${user}`,\n          confirmButtonColor: \"#71945B\",\n          confirmButtonText: \"Aceptar\",\n        });\n        pedirUsuarios();\n      } else if (result.isDenied) {\n        handleWithdrawingMoney(user);\n      } else if (result.isDismissed) {\n        handleSendingMoney(user);\n      }\n    });\n  };\n\n  const handleWithdrawingMoney = (user) => {\n    history.push(`/withdraw/${user}`);\n  };\n\n  const handleSendingMoney = (user) => {\n    history.push(`/send/${user}/t`);\n  };\n\n  const handleHistoryClick = () => {\n    history.push(\"/history/\");\n  };\n\n  const handleFinishGameClick = () => {\n    Swal.fire({\n      title: \"¿Estás seguro de que quieres finalizar?\",\n      confirmButtonColor: \"#71945B\",\n      confirmButtonText: \"Sí\",\n      cancelButtonColor: \"#B85B28\",\n      cancelButtonText: \"No\",\n      showCancelButton: true,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire({\n          title: \"Esperando confirmación.\",\n          confirmButtonColor: \"#71945B\",\n          confirmButtonText: \"Sí\",\n          cancelButtonColor: \"#B85B28\",\n          cancelButtonText: \"No\",\n          showCancelButton: true,\n        }).then((result) => {\n          if (result.isConfirmed) {\n            Swal.fire({\n              title: \"Partida finalizada con éxito\",\n              confirmButtonColor: \"#71945B\",\n              confirmButtonText: \"Aceptar\",\n            });\n            history.push(\"/winner\");\n          } else if (result.isDismissed) {\n            Swal.fire({\n              title: \"¡Han rechazado el fin del juego!\",\n              confirmButtonColor: \"#71945B\",\n              confirmButtonText: \"Aceptar\",\n            });\n          }\n        });\n      }\n    });\n  };\n\n  const buttons = {\n    leftButton: {\n      text: <FontAwesomeIcon icon={faAddressBook} />,\n      action: handleHistoryClick,\n    },\n    rightButton: {\n      text: <FontAwesomeIcon icon={faHourglassEnd} />,\n      action: handleFinishGameClick,\n    },\n  };\n  return (\n    <section className=\"section is-centered\">\n      <div className=\"container\">\n        <Logo />\n        <Button\n          action={() => {\n            localStorage.removeItem(\"user\");\n            history.push(\"/monopoly-e-wallet/\");\n          }}\n          text={<FontAwesomeIcon icon={faAirFreshener} />}\n        />\n        <PlayerGroup players={users} />\n        <BottomButtons {...buttons} />\n      </div>\n    </section>\n  );\n};\nexport default Bank;\n","import { useState, useEffect } from \"react\";\nimport Keyboard from \"../../components/Keyboard\";\nimport Logo from \"../../components/Logo\";\nimport BottomButtons from \"../../components/BottomButtons\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { toast } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { faAngleLeft, faShare } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport config from \"../../config\";\nimport { io } from \"socket.io-client\";\n\nlet socket;\n\nconst WithdrawMoney = () => {\n  let history = useHistory();\n\n  const [monto, setMonto] = useState(\"\");\n  const [hasComma, setHasComma] = useState(false);\n  const [afterComma, setAfterComma] = useState(0);\n\n  let currentUser = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (!currentUser) history.push(\"/monopoly-e-wallet\");\n\n  // CONECTO CON EL BACKEND\n  useEffect(() => {\n    socket = io(config.ENDPOINT);\n    const u = JSON.parse(localStorage.getItem(\"user\"));\n    socket.emit(\n      \"join\",\n      { username: u.username, room_id: u.room._id },\n      ({ error, user, quantity }) => {\n        if (user) {\n          localStorage.setItem(\"user\", JSON.stringify(user));\n        }\n      }\n    );\n    return () => {\n      //socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, []);\n\n  const { user } = useParams();\n  const saldoActual = \"1.000\";\n\n  const appendNumberToInput = (number) => {\n    const nvo_monto = `${monto}${number}`;\n    setMonto(nvo_monto);\n  };\n\n  const increaseAfterComma = () => setAfterComma(afterComma + 1);\n\n  const handleKeyPress = (e, number) => {\n    switch (number) {\n      case \".\":\n        if (monto.length === 0 && !hasComma) {\n          appendNumberToInput(\"0.\");\n          setHasComma(true);\n        } else if (!hasComma) {\n          appendNumberToInput(\".\");\n          setHasComma(true);\n        }\n        break;\n\n      case \"x\":\n        setMonto(\"\");\n        setHasComma(false);\n        setAfterComma(0);\n        break;\n\n      default:\n        if (!hasComma) {\n          appendNumberToInput(number);\n        } else {\n          if (afterComma < 2) {\n            appendNumberToInput(number);\n            increaseAfterComma();\n          }\n        }\n        break;\n    }\n  };\n\n  const handleWithdrawPayment = () => {\n    //Varias cosas:\n    //1) Valida que el monto a mandar no sea mayor al saldo del usuario.\n    //2) Valida que el usuario haya introducido un monto.\n    //3) Envía el dinero al usuario (backend)\n    //4) Devuelve al menú principal\n    if (monto.length !== 0) {\n      Swal.fire({\n        title: `¿Cobrarle ₩${monto} a ${user}?`,\n        confirmButtonColor: \"#71945B\",\n        cancelButtonColor: \"#B85B28\",\n        confirmButtonText: \"Sí\",\n        cancelButtonText: \"No\",\n        showCancelButton: true,\n      }).then((result) => {\n        if (result.isConfirmed) {\n          socket.emit(\"bank-debit\", {\n            user_id: JSON.parse(localStorage.getItem(\"user\"))._id,\n            amount: monto,\n            room_id: JSON.parse(localStorage.getItem(\"user\")).room._id,\n            to_user: user,\n          });\n          Swal.fire({\n            title: `Cobraste ₩${monto} a ${user}`,\n            confirmButtonColor: \"#71945B\",\n            confirmButtonText: \"Aceptar\",\n          });\n          setTimeout(() => handleBackButtonClick(), 500);\n          handleBackButtonClick();\n        }\n      });\n    } else {\n      toast.error(\"Introduzca el monto a cobrar\", {\n        position: \"top-right\",\n        autoClose: 3500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  };\n\n  const handleBackButtonClick = () => history.push(\"/bank\");\n\n  const buttons = {\n    leftButton: {\n      text: <FontAwesomeIcon icon={faAngleLeft} />,\n      action: handleBackButtonClick,\n    },\n    rightButton: {\n      text: <FontAwesomeIcon icon={faShare} />,\n      action: handleWithdrawPayment,\n    },\n  };\n\n  return (\n    <section className=\"section is-centered\">\n      <div className=\"container\">\n        <Logo mb=\"1\" />\n        <div className=\"level is-mobile has-text-black\">\n          <div className=\"level-item\">\n            <div className=\"level-left\">\n              <strong className=\"mr-2\">Cobrando a:</strong> {user}\n            </div>\n          </div>\n          <div className=\"level-item\">\n            <div className=\"level-right\">\n              <strong className=\"mr-2\">Saldo de {user}:</strong> ₩{saldoActual}\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-mobile is-centered is-half mb-3\">\n          <div className=\"column is-two-thirds\">\n            <input\n              className=\"input is-size-2 has-text-centered\"\n              value={`₩ ${monto}`}\n              readOnly\n            />\n          </div>\n        </div>\n\n        <Keyboard onKeyPress={(e, n) => handleKeyPress(e, n)} />\n\n        <BottomButtons {...buttons} />\n      </div>\n    </section>\n  );\n};\n\nexport default WithdrawMoney;\n","import { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft, faReceipt } from \"@fortawesome/free-solid-svg-icons\";\nimport BottomButtons from \"../../components/BottomButtons\";\nimport TransactionsTable from \"../../components/TransactionsTable\";\nimport Logo from \"../../components/Logo\";\nimport Swal from \"sweetalert2\";\nimport config from \"../../config\";\nimport { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\n\nlet socket;\n\nconst History = () => {\n  let history = useHistory();\n  const [transactions, setTransactions] = useState([]);\n\n  let user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (!user) history.push(\"/monopoly-e-wallet\");\n  else if (user.avatar !== \"bank\") history.push(\"/game\");\n\n  // CONEXIÓN CON EL BACKEND\n  useEffect(() => {\n    socket = io(config.ENDPOINT);\n    const u = JSON.parse(localStorage.getItem(\"user\"));\n    socket.emit(\n      \"join\",\n      { username: u.username, room_id: u.room._id },\n      ({ error, user, quantity }) => {\n        if (user) {\n          localStorage.setItem(\"user\", JSON.stringify(user));\n        }\n      }\n    );\n    return () => {\n      //socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.emit(\"get-transactions\", user.room._id, (response) => {\n      response = response.map((value, index) => {\n        return {\n          type: value.type === 'e' ? \"Envío\" : \"Cobro\",\n          sender: value.username,\n          receiver: value.to_user,\n          amount: value.amount,\n          hour: value.createdAt,\n        };\n      });\n      setTransactions(response);\n    });\n  }, []);\n\n  // const transactions = [\n  //   {\n  //     index: \"4\",\n  //     sender: \"ANYI\",\n  //     receiver: \"GABOX\",\n  //     amount: \"1000\",\n  //     hour: \"04:44 p.m.\",\n  //   },\n  //   {\n  //     index: \"3\",\n  //     sender: \"AJAV06\",\n  //     receiver: \"GABOX\",\n  //     amount: \"125\",\n  //     hour: \"04:42 p.m.\",\n  //   },\n  //   {\n  //     index: \"2\",\n  //     sender: \"JONABB\",\n  //     receiver: \"AJAV06\",\n  //     amount: \"2500\",\n  //     hour: \"04:38 p.m.\",\n  //   },\n  //   {\n  //     index: \"1\",\n  //     sender: \"GABOX\",\n  //     receiver: \"ANYI\",\n  //     amount: \"37\",\n  //     hour: \"04:34 p.m.\",\n  //   },\n  // ];\n\n  const buttons = {\n    leftButton: {\n      text: <FontAwesomeIcon icon={faAngleLeft} />,\n      action: () => history.push(\"/bank\"),\n    },\n    rightButton: {\n      text: <FontAwesomeIcon icon={faReceipt} />,\n      action: () =>\n        Swal.fire({\n          title: \"Hecho por Team MARVEL para el 1er reto interno de KURODev\",\n          text: \"Albert Acevedo, Gabriel Roa, Jonathan Calles\",\n          icon: \"success\",\n        }),\n    },\n  };\n\n  return (\n    <section className=\"section is-centered\">\n      <div className=\"container\">\n        <Logo mb=\"0\" />\n        <BottomButtons {...buttons} />\n        <TransactionsTable transactions={transactions} />\n      </div>\n    </section>\n  );\n};\n\nexport default History;\n","const Button = ({text, color, action, size}) => {\r\n    return(\r\n        <button className={`button is-${color} is-${size}`} onClick={action}>{text}</button>\r\n    );\r\n}\r\n\r\nexport default Button;","export default __webpack_public_path__ + \"static/media/logo.35edb2b5.png\";","import logo from \"./logo.png\";\r\n\r\nconst Logo = ({mb}) => {\r\n    return(\r\n    <figure className={`image container mb-${mb} has-ratio`} width=\"400\" style={{marginTop: \"-2rem\"}}>\r\n        <img alt=\"Logo de Monopoly\" src={logo}/>\r\n    </figure>);\r\n}\r\n\r\nexport default Logo;","const PlayerName = ({name, onTextChange}) => {\r\n    return(\r\n        <div>\r\n            <label className=\"is-white is-size-4\" style={{letterSpacing:'2px'}}>\r\n                Jugador:<br/>\r\n                <input className=\"input\" value={name} onChange={(e) => onTextChange(e)}></input>\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayerName;","export default __webpack_public_path__ + \"static/media/marvel.568d8c62.png\";","export default __webpack_public_path__ + \"static/media/kuro.cbe4521a.png\";","import marvel from \"./marvel.png\"\r\nimport kuro from \"./kuro.png\"\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <div className=\"level has-text-centered is-mobile mt-6\">\r\n            <div className=\"level-left mt-6\">\r\n                <div className=\"level-item\">\r\n                    <img src={marvel} alt=\"Logo de MARVEL\" className=\"image has-ratio\" width=\"125\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"level-right mt-6\">\r\n                <div className=\"level-item\">\r\n                    <img src={kuro} alt=\"Logo de KuroDev\" className=\"image has-ratio\" width=\"67\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","const config = {\n    //ENDPOINT: \"http://192.168.0.107:5007\"\n    ENDPOINT: \"https://e-wallet-monopoly.herokuapp.com\",\n\n};\n\nexport default config;\n","import {\r\n  faCat,\r\n  faPiggyBank,\r\n  faDog,\r\n  faShip,\r\n  faCar,\r\n  faQuestion,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst { FontAwesomeIcon } = require(\"@fortawesome/react-fontawesome\");\r\n\r\nconst Player = ({\r\n  username,\r\n  avatar,\r\n  amount,\r\n  action,\r\n  gameover,\r\n  winner,\r\n  winnerScreen,\r\n}) => {\r\n  let ico;\r\n\r\n  switch (avatar) {\r\n    case \"bank\":\r\n      ico = faPiggyBank;\r\n      break;\r\n\r\n    case \"cat\":\r\n      ico = faCat;\r\n      break;\r\n\r\n    case \"dog\":\r\n      ico = faDog;\r\n      break;\r\n\r\n    case \"ship\":\r\n      ico = faShip;\r\n      break;\r\n\r\n    case \"car\":\r\n      ico = faCar;\r\n      break;\r\n\r\n    default:\r\n      ico = faQuestion;\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={action}\r\n      className={`card has-text-centered ${\r\n        !winner && winnerScreen ? \"tint\" : undefined\r\n      }`}\r\n      style={\r\n        gameover\r\n          ? {\r\n              borderStyle: \"solid\",\r\n              borderColor: \"#C70000\",\r\n              borderWidth: \"1em\",\r\n            }\r\n          : undefined || winner\r\n          ? {\r\n              boxShadow: \"0 0 0 0.75rem #f9ee23\",\r\n            }\r\n          : undefined\r\n      }\r\n    >\r\n      <header className=\"card-header is-size-3\">\r\n        <div className=\"card-header-title is-centered\">\r\n          <div\r\n            className=\"has-background-warning pl-5 pr-5 pt-1 has-text-white\"\r\n            style={{ borderRadius: \"5px\" }}\r\n          >\r\n            {username}\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <div className=\"card-image is-128x128 has-text-black is-size-1\">\r\n        <FontAwesomeIcon icon={ico}/>\r\n      </div>\r\n      <footer className=\"card-footer\">\r\n        <p className=\"card-footer-item has-text-black is-centered\">\r\n          {amount !== \"null\" ? `₩ ${amount}` : undefined}\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import Player from \"../Player\";\n\nconst PlayerGroup = ({ players, winner }) => {\n  return (\n    <div>\n      <div className=\"columns is-mobile is-centered has-text-centered mt-1\">\n        {\n          // eslint-disable-next-line\n          players.map((value, index) => {\n            if (winner) {\n              if (index === 1 || index === 2)\n                return (\n                  <div key={index} className=\"column is-6\">\n                    <Player\n                      {...value}\n                      winner={winner === value.username ? winner : undefined}\n                      winnerScreen={true}\n                    />\n                  </div>\n                );\n            } else if (index === 1 || index === 2)\n              return (\n                <div key={index} className=\"column is-6\">\n                  <Player {...value} />\n                </div>\n              );\n            else return <div></div>;\n          })\n        }\n      </div>\n      <div className=\"columns is-mobile is-half is-centered has-text-centered\">\n        {\n          // eslint-disable-next-line\n          players.map((value, index) => {\n            if (winner) {\n              if (index === 3 || index === 4)\n                return (\n                  <div key={index} className=\"column is-6\">\n                    <Player\n                      {...value}\n                      winner={winner === value.username ? winner : undefined}\n                      winnerScreen={true}\n                    />\n                  </div>\n                );\n            } else if (index === 3 || index === 4)\n              return (\n                <div key={index} className=\"column is-6\">\n                  <Player {...value} />\n                </div>\n              );\n            else return <div></div>;\n          })\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerGroup;\n","const Key = ({number, action}) => {\r\n    return (\r\n        <div className=\"column is-4\">\r\n            <div onClick={(e) => action(e)} className=\"button is-large has-background-warning has-text-white\" value={number}>\r\n                {number}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Key;","import Key from \"./Key\";\r\n\r\nconst Keyboard = ({ onKeyPress }) => {\r\n  return (\r\n    <div className=\"columns is-mobile is-3 is-centered has-text-centered\">\r\n      <div className=\"box has-background-success is-centered has-text-centered is-6\">\r\n        <div className=\"columns is-mobile  is-centered\">\r\n          <Key number=\"1\" action={(e, number) => onKeyPress(e, \"1\")} />\r\n          <Key number=\"2\" action={(e, number) => onKeyPress(e, \"2\")} />\r\n          <Key number=\"3\" action={(e, number) => onKeyPress(e, \"3\")} />\r\n        </div>\r\n        <div className=\"columns is-mobile  \">\r\n          <Key number=\"4\" action={(e, number) => onKeyPress(e, \"4\")} />\r\n          <Key number=\"5\" action={(e, number) => onKeyPress(e, \"5\")} />\r\n          <Key number=\"6\" action={(e, number) => onKeyPress(e, \"6\")} />\r\n        </div>\r\n        <div className=\"columns is-mobile  \">\r\n          <Key number=\"7\" action={(e, number) => onKeyPress(e, \"7\")} />\r\n          <Key number=\"8\" action={(e, number) => onKeyPress(e, \"8\")} />\r\n          <Key number=\"9\" action={(e, number) => onKeyPress(e, \"9\")} />\r\n        </div>\r\n        <div className=\"columns is-mobile  \">\r\n          <Key number=\".\" action={(e, number) => onKeyPress(e, \".\")} />\r\n          <Key number=\"0\" action={(e, number) => onKeyPress(e, \"0\")} />\r\n          <Key number=\"x\" action={(e, number) => onKeyPress(e, \"x\")} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Keyboard;\r\n","import Button from \"../Button\";\n\nconst BottomButtons = ({ leftButton, rightButton }) => {\n  return (\n    <div className=\"level is-mobile has-text-black mt-4\">\n      <div className=\"level-item\">\n        {leftButton ? (\n          <div className=\"level-left\">\n            <Button\n              text={leftButton.text}\n              color=\"warning\"\n              size=\"large\"\n              action={leftButton.action}\n            />\n          </div>\n        ) : undefined}\n      </div>\n      {rightButton ? (\n        <div className=\"level-item\">\n          <div className=\"level-right\">\n            <Button\n              text={rightButton.text}\n              color=\"link\"\n              size=\"large\"\n              action={rightButton.action}\n            />\n          </div>\n        </div>\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default BottomButtons;\n","import PlayerGroup from \"../../components/PlayerGroup\";\nimport BottomButtons from \"../../components/BottomButtons\";\nimport Logo from \"../../components/Logo\";\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Bankrupt = () => {\n  let history = useHistory();\n\n  let user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (!user) history.push(\"/monopoly-e-wallet\");\n\n  const handleBankruptcy = (who) => {\n    Swal.fire({\n      title: `¿Estás seguro que te quebró ${who}?`,\n      confirmButtonColor: \"#71945B\",\n      cancelButtonColor: \"#B85B28\",\n      confirmButtonText: \"Sí\",\n      cancelButtonText: \"No\",\n      showCancelButton: true,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        history.push(\"/gameover\");\n      }\n    });\n  };\n\n  const players = [\n    {\n      playerName: \"ANYI\",\n      token: \"http://placekitten.com/128/129\",\n      amount: \"null\",\n      action: () => handleBankruptcy(\"ANYI\"),\n    },\n    {\n      playerName: \"AJAV06\",\n      token: \"http://placekitten.com/129/128\",\n      amount: \"null\",\n      action: () => handleBankruptcy(\"AJAV06\"),\n    },\n    {\n      playerName: \"JONABB\",\n      token: \"http://placekitten.com/127/128\",\n      amount: \"null\",\n      action: () => handleBankruptcy(\"JONABB\"),\n    },\n    {\n      playerName: \"BANCO\",\n      token: \"http://placekitten.com/128/127\",\n      amount: \"null\",\n      action: () => handleBankruptcy(\"BANCO\"),\n    },\n  ];\n\n  const buttons = {\n    leftButton: {\n      link: \"game\",\n      text: \"Atrás\",\n    },\n  };\n\n  return (\n    <section className=\"section is-centered\">\n      <div className=\"container has-text-black has-text-centered\">\n        <Logo mb=\"2\" />\n        <h1 class=\"title is-3\" style={{ marginBottom: \"-0.5rem\" }}>\n          ¿Quién te llevó a la bancarrota?\n        </h1>\n        <PlayerGroup players={players} />\n        <BottomButtons {...buttons} />\n      </div>\n    </section>\n  );\n};\n\nexport default Bankrupt;\n","import Logo from \"../../components/Logo\";\nimport Player from \"../../components/Player\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\n\nconst GameOver = () => {\n  let history = useHistory();\n  \n  let user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (!user) history.push(\"/monopoly-e-wallet\");\n\n  const handleHomeButtonClick = () => {\n    history.push(\"/monopoly-e-wallet/\");\n  };\n\n  return (\n    <section className=\"section is-centered\">\n      <div className=\"container is-centered has-text-centered\">\n        <Logo mb=\"2\" />\n        <h1 className=\"title is-2\">FIN DEL JUEGO</h1>\n        <h1 className=\"title is-3\">Te quebró ANYI</h1>\n        <Player\n          playerName=\"ANYI\"\n          token=\"http://placekitten.com/128/129\"\n          amount=\"null\"\n          gameover\n        />\n        <button\n          className=\"button is-rounded is-large mt-5\"\n          onClick={handleHomeButtonClick}\n        >\n          <span className=\"icon is-medium\">\n            <FontAwesomeIcon icon={faHome} />\n          </span>\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default GameOver;\n","import Logo from \"../../components/Logo\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\nimport PlayerGroup from \"../../components/PlayerGroup\";\n\nconst WinnerWinnerChickenDinner = () => {\n    let history = useHistory();\n\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n\n    if (!user) history.push(\"/monopoly-e-wallet\");\n    \n  const handleHomeButtonClick = () => {\n    history.push(\"/monopoly-e-wallet/\");\n  };\n\n  const players = [\n    {\n      playerName: \"GABOX\",\n      token: \"http://placekitten.com/128/128\",\n      amount: \"1000\",\n    },\n    {\n      playerName: \"ANYI\",\n      token: \"http://placekitten.com/128/129\",\n      amount: \"~2000\",\n    },\n    {\n      playerName: \"AJAV06\",\n      token: \"http://placekitten.com/129/128\",\n      amount: \"~1000\",\n    },\n    {\n      playerName: \"JONABB\",\n      token: \"http://placekitten.com/127/128\",\n      amount: \"~2000\",\n    },\n  ];\n\n  return (\n    <section className=\"section is-centered\">\n      <div className=\"container is-centered has-text-centered\">\n        <Logo mb=\"2\" />\n        <h1 className=\"title is-2\">FIN DEL JUEGO</h1>\n        <h1 className=\"title is-3\">ANYI es el ganador</h1>\n        <PlayerGroup \n        players={players}\n        winner=\"ANYI\"/>\n        <button\n          className=\"button is-rounded is-large mt-5\"\n          onClick={handleHomeButtonClick}\n        >\n          <span className=\"icon is-medium\">\n            <FontAwesomeIcon icon={faHome}/>\n          </span>\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default WinnerWinnerChickenDinner;\n","const TransactionsTable = ({ transactions }) => {\n  return (\n    <table className=\"table is-small\">\n      <thead>\n        <tr>\n          <th>Tipo</th>\n          <th>Envió</th>\n          <th>Recibió</th>\n          <th>Monto</th>\n          <th>Hora</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions?.map((value) => (\n          <tr>\n            <td>{value.type}</td>\n            <td>{value.sender}</td>\n            <td>{value.receiver}</td>\n            <td>₩{value.amount}</td>\n            <td>{value.hour}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default TransactionsTable;\n","import Index from \"./views/Index\";\r\nimport \"./style/app.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Game from \"./views/Game\";\r\nimport SendMoney from \"./views/SendMoney\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Bankrupt from \"./views/Bankrupt\";\r\nimport Bank from \"./views/Bank\";\r\nimport GameOver from \"./views/GameOver\";\r\nimport WinnerWinnerChickenDinner from \"./views/WinnerWinnerChickenDinner\";\r\nimport WithdrawMoney from \"./views/WithdrawMoney\";\r\nimport History from \"./views/History\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\">\r\n          <Index />\r\n        </Route>\r\n        <Route path=\"/monopoly-e-wallet/\" exact>\r\n          <Index />\r\n        </Route>\r\n        <Route path=\"/monopoly-e-wallet/game/\" exact>\r\n          <Game />\r\n        </Route>\r\n        <Route path=\"/monopoly-e-wallet/send/:user/:bank?\">\r\n          <SendMoney />\r\n        </Route>\r\n        <Route path=\"/monopoly-e-wallet/bankrupt/\" exact>\r\n          <Bankrupt />\r\n        </Route>\r\n        <Route path=\"/monopoly-e-wallet/bank/\" exact>\r\n          <Bank />\r\n        </Route>\r\n        <Route path=\"/monopoly-e-wallet/gameover/\" exact>\r\n          <GameOver />\r\n        </Route>\r\n        <Route path=\"/monopoly-e-wallet/winner/\" exact>\r\n          <WinnerWinnerChickenDinner />\r\n        </Route>\r\n        <Route path=\"/monopoly-e-wallet/withdraw/:user\" exact>\r\n          <WithdrawMoney />\r\n        </Route>\r\n        <Route path=\"/monopoly-e-wallet/history/\" exact>\r\n          <History />\r\n        </Route>\r\n      </Switch>\r\n      <ToastContainer />\r\n    </Router>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://cra.link/PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://cra.link/PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n    }\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}