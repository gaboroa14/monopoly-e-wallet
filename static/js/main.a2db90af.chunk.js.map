{"version":3,"sources":["views/Index/index.js","views/Game/index.js","views/SendMoney/index.js","views/Bankrupt/index.js","views/Bank/index.js","views/WinnerWinnerChickenDinner/index.js","views/WithdrawMoney/index.js","views/History/index.js","components/Button/index.js","components/Logo/logo.png","components/Logo/index.js","components/PlayerName/index.js","components/Footer/marvel.png","components/Footer/kuro.png","components/Footer/index.js","config.js","components/Spinner/index.js","components/Player/index.js","components/PlayerGroup/index.js","components/Keyboard/Key.js","components/Keyboard/index.js","components/BottomButtons/index.js","views/GameOver/index.js","components/TransactionsTable/index.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["socket","Button","text","color","action","size","className","onClick","Logo","mb","width","style","marginTop","alt","src","logo","PlayerName","name","onTextChange","letterSpacing","value","onChange","e","Footer","marvel","kuro","config","ENDPOINT","Spinner","isLoading","position","top","left","transform","zIndex","visibility","loading","Index","useState","Math","random","toString","substr","playerName","setPlayerName","setIsLoading","history","useHistory","JSON","parse","localStorage","getItem","room","init","avatar","push","useEffect","io","off","on","response","Swal","getHtmlContainer","quantity","enableButtons","innerHTML","fire","title","confirmButtonText","removeItem","u","setItem","stringify","close","validateField","height","target","emit","toUpperCase","user","error","_id","confirmButtonColor","cancelButtonColor","cancelButtonText","showCancelButton","showConfirmButton","then","result","isConfirmed","denyButtonColor","denyButtonText","showDenyButton","icon","isDismissed","showLoading","getDenyButton","input","inputAttributes","length","username","room_id","isDenied","FontAwesomeIcon","require","Player","ico","amount","gameover","winner","winnerScreen","faPiggyBank","faCat","faDog","faShip","faCar","faUniversity","faQuestion","undefined","borderStyle","borderColor","borderWidth","boxShadow","borderRadius","PlayerGroup","players","console","log","map","index","Game","setUser","users","setUsers","personaQuebrada","getApproxAmount","exactAmount","firstDigit","zeroesQuantity","concat","repeat","item","showCurrentAmount","handleSendingMoney","res","myUser","to_user","toast","dark","person","find","who","faAirFreshener","faBookDead","faHome","Key","number","Keyboard","onKeyPress","BottomButtons","leftButton","rightButton","SendMoney","setMyUser","useParams","bank","monto","setMonto","hasComma","setHasComma","afterComma","setAfterComma","appendNumberToInput","nvo_monto","handleKeyPress","handleBackButtonClick","buttons","faAngleLeft","faHandHoldingUsd","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","parseInt","user_id","setTimeout","readOnly","n","Bankrupt","filter","handleBankruptcy","class","marginBottom","Bank","pedirUsuarios","showBankerOptions","showCloseButton","handleWithdrawingMoney","faAddressBook","faHourglassEnd","GameOver","token","WinnerWinnerChickenDinner","WithdrawMoney","faShare","TransactionsTable","transactions","marginLeft","marginRight","type","sender","receiver","hour","History","setTransactions","creationDate","Date","createdAt","creationHour","getHours","creationMin","getMinutes","amPm","faReceipt","App","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.a2db90af.chunk.js","sourcesContent":["import Button from \"../../components/Button\";\r\nimport Logo from \"../../components/Logo\";\r\nimport PlayerName from \"../../components/PlayerName\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport config from \"../../config\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nlet socket;\r\n\r\nconst Index = () => {\r\n  const [playerName, setPlayerName] = useState(\r\n    Math.random().toString(36).substr(2, 4)\r\n  );\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  let history = useHistory();\r\n\r\n  // REDIRECCIÓN SI EL USUARIO YA ESTÁ EN UNA PARTIDA\r\n  if (\r\n    JSON.parse(localStorage.getItem(\"user\"))?.room.init &&\r\n    JSON.parse(localStorage.getItem(\"user\")).avatar === \"bank\"\r\n  ) {\r\n    history.push(\"/monopoly-e-wallet/bank\");\r\n  } else if (JSON.parse(localStorage.getItem(\"user\"))?.room.init) {\r\n    history.push(\"/monopoly-e-wallet/game\");\r\n  }\r\n\r\n  // CONEXIÓN CON EL BACKEND\r\n  useEffect(() => {\r\n    socket = io(config.ENDPOINT);\r\n    return () => {\r\n      //socket.emit(\"disconnect\");\r\n      socket.off();\r\n    };\r\n  }, []);\r\n\r\n  // MÉTODOS PARA GESTIONAR CONEXIONES CON EL WEBSOCKET\r\n\r\n  // Personas se unen a la partida.\r\n  useEffect(() => {\r\n    socket.on(\"joined\", (response) => {\r\n      if (Swal.getHtmlContainer()) {\r\n        if (response.quantity >= 3) Swal.enableButtons();\r\n        Swal.getHtmlContainer().innerHTML = `Esperando jugadores. ${\r\n          response.quantity\r\n        } persona${response.quantity !== 1 ? \"s\" : \"\"} se ha${\r\n          response.quantity !== 1 ? \"n\" : \"\"\r\n        } unido.`;\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // Personas se unen a la partida.\r\n  useEffect(() => {\r\n    socket.on(\"person-join-left\", (response) => {\r\n      if (Swal.getHtmlContainer()) {\r\n        if (response.quantity >= 3) Swal.enableButtons();\r\n        Swal.getHtmlContainer().innerHTML = `Esperando jugadores. ${\r\n          response.quantity\r\n        } persona${response.quantity !== 1 ? \"s\" : \"\"} se ha${\r\n          response.quantity !== 1 ? \"n\" : \"\"\r\n        } unido.`;\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // Se borra la partida.\r\n  useEffect(() => {\r\n    socket.on(\"room-deleted\", () => {\r\n      Swal.fire({\r\n        title: \"Se ha cerrado la sala.\",\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n      localStorage.removeItem(\"user\");\r\n    });\r\n  }, []);\r\n\r\n  // Se inicia la partida.\r\n  useEffect(() => {\r\n    socket.on(\"game-begun\", () => {\r\n      let u = JSON.parse(localStorage.getItem(\"user\"));\r\n      u.room.init = true;\r\n      localStorage.setItem(\"user\", JSON.stringify(u));\r\n      Swal.close();\r\n      history.push(\r\n        JSON.parse(localStorage.getItem(\"user\")).avatar === \"bank\"\r\n          ? \"/monopoly-e-wallet/bank\"\r\n          : \"/monopoly-e-wallet/game\"\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  // VALIDACIÓN DEL NOMBRE\r\n  const validateField = () => {\r\n    if (playerName === \"\") {\r\n      Swal.fire({\r\n        title: \"¡Debes introducir un nombre!\",\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n      return false;\r\n    } else return true;\r\n  };\r\n\r\n  // CREAR UNA SALA\r\n  const handleCreateClick = () => {\r\n    // Conectar con el backend para crear una sala.\r\n    // Devuelve un objeto de tipo user que se guarda en localStorage.\r\n    setIsLoading(true);\r\n\r\n    if (!validateField()) return;\r\n\r\n    socket.emit(\"create-room\", playerName.toUpperCase(), ({ user, quantity, error }) => {\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n      setIsLoading(false);\r\n      Swal.fire({\r\n        title: `El código de la sala es: ${user.room._id}`,\r\n        text: `Esperando jugadores. 1 persona se ha unido.`,\r\n        confirmButtonColor: \"#71945B\",\r\n        cancelButtonColor: \"#B85B28\",\r\n        confirmButtonText: \"Comenzar\",\r\n        cancelButtonText: \"Cancelar\",\r\n        showCancelButton: true,\r\n        showConfirmButton: true,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          Swal.fire({\r\n            title: \"¿Está seguro que desea comenzar la partida?\",\r\n            confirmButtonColor: \"#71945B\",\r\n            denyButtonColor: \"#B85B28\",\r\n            confirmButtonText: \"Sí\",\r\n            denyButtonText: \"No\",\r\n            showDenyButton: true,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              socket.emit(\r\n                \"begin-game\",\r\n                JSON.parse(localStorage.getItem(\"user\")).room._id,\r\n                (error) => {\r\n                  if (error)\r\n                    Swal.fire({\r\n                      title: `Error: ${error}`,\r\n                      icon: \"warning\",\r\n                    });\r\n                }\r\n              );\r\n            }\r\n          });\r\n        } else if (\r\n          result.isDismissed &&\r\n          JSON.parse(localStorage.getItem(\"user\"))\r\n        ) {\r\n          // socket.emit(\r\n          //   \"delete-room\",\r\n          //   JSON.parse(localStorage.getItem(\"user\")).room._id\r\n          // );\r\n        }\r\n      });\r\n      Swal.showLoading(Swal.getDenyButton());\r\n    });\r\n  };\r\n\r\n  const handleJoinClick = () => {\r\n    if (!validateField()) return;\r\n    Swal.fire({\r\n      title: \"Introduzca el código de la sala: \",\r\n      input: \"text\",\r\n      inputAttributes: {\r\n        value: \"ldkj\",\r\n      },\r\n    }).then((result) => {\r\n      if (result.value.length !== 3) {\r\n        Swal.fire({\r\n          title: \"Debe introducir un código válido\",\r\n          confirmButtonColor: \"#71945B\",\r\n          confirmButtonText: \"Aceptar\",\r\n        });\r\n      } else {\r\n        setIsLoading(true);\r\n        socket.emit(\r\n          \"join\",\r\n          { username: playerName.toUpperCase(), room_id: result.value },\r\n          ({ error, user, quantity }) => {\r\n            if (error) {\r\n              Swal.fire({\r\n                title: `Error: ${error}`,\r\n                confirmButtonText: \"Aceptar\",\r\n                icon: \"warning\",\r\n              });\r\n              return;\r\n            }\r\n            setIsLoading(false);\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n            Swal.fire({\r\n              title: `El código de la sala es: ${result.value.toUpperCase()}`,\r\n              text: `Esperando jugadores. ${quantity} persona${\r\n                quantity !== 1 ? \"s\" : \"\"\r\n              } se ha${quantity !== 1 ? \"n\" : \"\"} unido.`,\r\n              denyButtonColor: \"#B85B28\",\r\n              denyButtonText: \"Cancelar\",\r\n              showDenyButton: true,\r\n              showConfirmButton: false,\r\n            }).then((result) => {\r\n              if (result.isDenied) {\r\n                socket.emit(\"delete-user\", user._id, (response) => {\r\n                  localStorage.removeItem(\"user\");\r\n                });\r\n              }\r\n            });\r\n            Swal.showLoading();\r\n          }\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section\r\n      className=\"section is-centered has-background-danger\"\r\n      style={{ height: \"100%\" }}\r\n    >\r\n      <div className=\"container\">\r\n        <Logo mb=\"6\" />\r\n        <Spinner isLoading={isLoading}/>\r\n        <PlayerName\r\n          name={playerName}\r\n          onTextChange={(e) => setPlayerName(e.target.value)}\r\n        />\r\n        <div className=\"buttons is-centered mt-6 mb-6\">\r\n          <Button\r\n            text=\"Crear\"\r\n            color=\"primary\"\r\n            action={handleCreateClick}\r\n            size=\"large\"\r\n          />\r\n          <Button\r\n            text=\"Unirse\"\r\n            color=\"link\"\r\n            action={handleJoinClick}\r\n            size=\"large\"\r\n          />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n      <div className=\"hero has-background-danger\">\r\n        <div className=\"hero-body\"></div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import Logo from \"../../components/Logo\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory, Link, Redirect } from \"react-router-dom\";\r\nimport PlayerGroup from \"../../components/PlayerGroup\";\r\nimport io from \"socket.io-client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  faSadCry,\r\n  faAirFreshener,\r\n  faHome,\r\n  faBookDead,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport config from \"../../config\";\r\nimport Button from \"../../components/Button\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nlet socket;\r\n\r\nconst Game = () => {\r\n  let history = useHistory();\r\n\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"user\")));\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  if (!user) history.push(\"/monopoly-e-wallet/\");\r\n  else if (user.avatar === \"bank\") history.push(\"/monopoly-e-wallet/bank\");\r\n\r\n  // CONEXIÓN CON EL BACKEND\r\n  useEffect(() => {\r\n    socket = io(config.ENDPOINT);\r\n    const u = JSON.parse(localStorage.getItem(\"user\"));\r\n    socket.emit(\r\n      \"join\",\r\n      { username: u.username, room_id: u.room._id },\r\n      ({ error, user, quantity }) => {\r\n        if (user) {\r\n          localStorage.setItem(\"user\", JSON.stringify(user));\r\n        }\r\n      }\r\n    );\r\n    return () => {\r\n      //socket.emit(\"disconnect\");\r\n      socket.off();\r\n    };\r\n  }, []);\r\n\r\n  const personaQuebrada = () => {\r\n    Swal.fire({\r\n      title: \"¡Esta persona está quebrada!\",\r\n      confirmButtonText: \"Esito\",\r\n    });\r\n  };\r\n\r\n  // MONTO APROXIMADO\r\n  const getApproxAmount = (exactAmount) => {\r\n    let firstDigit = exactAmount.toString()[0];\r\n    let zeroesQuantity = exactAmount.toString().substr(1).length;\r\n    let approx = firstDigit.concat(\"0\".repeat(zeroesQuantity));\r\n    return approx;\r\n  };\r\n\r\n  // OBTENER LOS USUARIOS POR PRIMERA VEZ\r\n  useEffect(() => {\r\n    socket.emit(\"get-users\", user?.room._id, (response) => {\r\n      response = response.map((item) => {\r\n        return {\r\n          username: item.username,\r\n          avatar: item.avatar,\r\n          amount:\r\n            item.username === user.username\r\n              ? item.amount\r\n              : `~${getApproxAmount(item.amount)}`,\r\n          action:\r\n            JSON.parse(localStorage.getItem(\"user\")).username === item.username\r\n              ? showCurrentAmount\r\n              : item.amount === 0\r\n              ? personaQuebrada\r\n              : () => handleSendingMoney(item.username),\r\n        };\r\n      });\r\n      setUsers(response);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  // ESCUCHAR LAS TRANSACCIONES DE CARGA\r\n  useEffect(() => {\r\n    socket.on(\"transaction\", (res) => {\r\n      const myUser = JSON.parse(localStorage.getItem(\"user\"));\r\n      if (res.to_user === myUser.username) {\r\n        toast.dark(`${res.username} te ha enviado ₩${res.amount}`);\r\n      }\r\n      myUser.amount += res.amount;\r\n      localStorage.setItem(\"user\", JSON.stringify(myUser));\r\n    });\r\n  }, []);\r\n\r\n  // ESCUCHAR LAS TRANSACCIONES DE COBRO\r\n  useEffect(() => {\r\n    socket.on(\"debit\", (res) => {\r\n      const myUser = JSON.parse(localStorage.getItem(\"user\"));\r\n      if (res.to_user === myUser.username) {\r\n        toast.dark(`El banco te ha cobrado ₩${res.amount}`);\r\n        myUser.amount -= res.amount;\r\n        localStorage.setItem(\"user\", JSON.stringify(myUser));\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // ESCUCHAR LAS BANCARROTAS DE CARGA\r\n  useEffect(() => {\r\n    socket.on(\"bankrupted\", (person) => {\r\n      toast.dark(`¡${person} ha quebrado!`);\r\n    });\r\n  }, []);\r\n\r\n  // ESCUCHAR SI ALGUIEN GANÓ\r\n  useEffect(() => {\r\n    socket.on(\"winner-player\", (response) => {\r\n      history.push(`/monopoly-e-wallet/winner/${response.username}`);\r\n    });\r\n  }, []);\r\n\r\n  // ESCUCHAR LAS ACTUALIZACIONES EN LOS USUARIOS\r\n  useEffect(() => {\r\n    socket.on(\"users-list\", (response) => {\r\n      console.log(response);\r\n      setUser(\r\n        response.find(\r\n          (item) => item._id == JSON.parse(localStorage.getItem(\"user\"))._id\r\n        )\r\n      );\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n      response = response.map((item) => {\r\n        return {\r\n          username: item.username,\r\n          avatar: item.avatar,\r\n          amount:\r\n            item.username === user.username\r\n              ? item.amount\r\n              : `~${getApproxAmount(item.amount)}`,\r\n          action:\r\n            JSON.parse(localStorage.getItem(\"user\")).username === item.username\r\n              ? showCurrentAmount\r\n              : () => handleSendingMoney(item.username),\r\n        };\r\n      });\r\n      setUsers(response);\r\n    });\r\n  }, []);\r\n\r\n  const showCurrentAmount = () => {\r\n    Swal.fire({\r\n      title:\r\n        user.amount !== 0\r\n          ? `Su saldo es ₩${user.amount}`\r\n          : \"Estás en la quiebra.\",\r\n      confirmButtonColor: \"#71945B\",\r\n      confirmButtonText: \"Aceptar\",\r\n    });\r\n  };\r\n\r\n  const handleSendingMoney = (who) => {\r\n    if (user.amount === 0) {\r\n      Swal.fire({\r\n        title: \"¡Estás quebrado! No puedes enviar dinero.\",\r\n        confirmButtonText: \"Chale\",\r\n      });\r\n      return;\r\n    }\r\n    history.push(`/monopoly-e-wallet/send/${who}`);\r\n  };\r\n\r\n  return (\r\n    <section className=\"section is-centered\">\r\n      <div className=\"container\">\r\n        <Logo />\r\n\r\n        <div style={{ visibility: isLoading ? \"hidden\" : \"visible\" }}>\r\n          <PlayerGroup players={users} key=\"0\" />\r\n        </div>\r\n        <div\r\n          className=\"columns is-mobile is-half is-centered has-text-centered\"\r\n          style={{ visibility: isLoading ? \"hidden\" : \"visible\" }}\r\n        >\r\n          <Button\r\n            action={() => {\r\n              localStorage.removeItem(\"user\");\r\n              history.push(\"/monopoly-e-wallet/\");\r\n            }}\r\n            text={<FontAwesomeIcon icon={faAirFreshener} />}\r\n          />\r\n          <div className=\"column is-12\">\r\n            <div\r\n              className=\"box is-size-1 has-text-black\"\r\n              onClick={\r\n                user.amount !== 0\r\n                  ? () => history.push(\"/monopoly-e-wallet/bankrupt\")\r\n                  : () => {\r\n                      localStorage.removeItem(\"user\");\r\n                      history.push(\"/monopoly-e-wallet/\");\r\n                    }\r\n              }\r\n            >\r\n              <FontAwesomeIcon icon={user.amount !== 0 ? faBookDead : faHome} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import { useState, useEffect } from \"react\";\r\nimport Keyboard from \"../../components/Keyboard\";\r\nimport Logo from \"../../components/Logo\";\r\nimport BottomButtons from \"../../components/BottomButtons\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { io } from \"socket.io-client\";\r\nimport config from \"../../config\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAngleLeft,\r\n  faHandHoldingUsd,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlet socket;\r\n\r\nconst SendMoney = () => {\r\n  let history = useHistory();\r\n\r\n  const [myUser, setMyUser] = useState(\r\n    JSON.parse(localStorage.getItem(\"user\"))\r\n  );\r\n\r\n  if (!myUser) history.push(\"/monopoly-e-wallet/\");\r\n\r\n  // CONEXIÓN CON EL BACKEND\r\n  useEffect(() => {\r\n    socket = io(config.ENDPOINT);\r\n    return () => {\r\n      //socket.emit(\"disconnect\");\r\n      socket.off();\r\n    };\r\n  }, []);\r\n\r\n  const { user, bank } = useParams();\r\n\r\n  const [monto, setMonto] = useState(\"\");\r\n  const [hasComma, setHasComma] = useState(false);\r\n  const [afterComma, setAfterComma] = useState(0);\r\n\r\n  const appendNumberToInput = (number) => {\r\n    const nvo_monto = `${monto}${number}`;\r\n    setMonto(nvo_monto);\r\n  };\r\n\r\n  const increaseAfterComma = () => setAfterComma(afterComma + 1);\r\n\r\n  const handleKeyPress = (e, number) => {\r\n    switch (number) {\r\n      case \".\":\r\n        if (monto.length === 0 && !hasComma) {\r\n          appendNumberToInput(\"0.\");\r\n          setHasComma(true);\r\n        } else if (!hasComma) {\r\n          appendNumberToInput(\".\");\r\n          setHasComma(true);\r\n        }\r\n        break;\r\n\r\n      case \"x\":\r\n        setMonto(\"\");\r\n        setHasComma(false);\r\n        setAfterComma(0);\r\n        break;\r\n\r\n      default:\r\n        if (!hasComma) {\r\n          appendNumberToInput(number);\r\n        } else {\r\n          if (afterComma < 2) {\r\n            appendNumberToInput(number);\r\n            increaseAfterComma();\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSendPayment = () => {\r\n    //Varias cosas:\r\n    //1) Valida que el monto a mandar no sea mayor al saldo del usuario.\r\n    //2) Valida que el usuario haya introducido un monto.\r\n    //3) Envía el dinero al usuario (backend)\r\n    //4) Devuelve al menú principal\r\n    if (!bank && monto > myUser.amount) {\r\n      toast.error(\"Monto insuficiente.\", {\r\n        position: \"top-right\",\r\n        autoClose: 3500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    } else if (parseInt(monto) === 0) {\r\n      toast.error(\"Introduzca un monto válido.\", {\r\n        position: \"top-right\",\r\n        autoClose: 3500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    if (monto.length !== 0) {\r\n      Swal.fire({\r\n        title: `¿Enviarle ₩${monto} a ${user}?`,\r\n        confirmButtonColor: \"#71945B\",\r\n        cancelButtonColor: \"#B85B28\",\r\n        confirmButtonText: \"Sí\",\r\n        cancelButtonText: \"No\",\r\n        showCancelButton: true,\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          socket.emit(\"send-transaction\", {\r\n            user_id: myUser._id,\r\n            amount: monto,\r\n            room_id: myUser.room._id,\r\n            to_user: user,\r\n          });\r\n          Swal.fire({\r\n            title: `Enviaste ₩${monto} a ${user}`,\r\n            confirmButtonColor: \"#71945B\",\r\n            confirmButtonText: \"Aceptar\",\r\n          });\r\n          myUser.amount -= monto;\r\n          localStorage.setItem(\"user\", JSON.stringify(myUser));\r\n          setMyUser(myUser);\r\n          setTimeout(() => handleBackButtonClick(), 500);\r\n        }\r\n      });\r\n    } else {\r\n      toast.error(\"Introduzca el monto a enviar\", {\r\n        position: \"top-right\",\r\n        autoClose: 3500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBackButtonClick = () =>\r\n    history.push(bank ? \"/monopoly-e-wallet/bank\" : \"/monopoly-e-wallet/game\");\r\n\r\n  const buttons = {\r\n    leftButton: {\r\n      text: <FontAwesomeIcon icon={faAngleLeft} />,\r\n      action: handleBackButtonClick,\r\n    },\r\n    rightButton: {\r\n      text: <FontAwesomeIcon icon={faHandHoldingUsd} />,\r\n      action: handleSendPayment,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <section className=\"section is-centered\">\r\n      <div className=\"container\">\r\n        <Logo mb=\"1\" />\r\n        <div className=\"level is-mobile has-text-black\">\r\n          <div className=\"level-item\">\r\n            <div className=\"level-left\">\r\n              <strong className=\"mr-2\">Enviando a:</strong> {user}\r\n            </div>\r\n          </div>\r\n          <div className=\"level-item\">\r\n            <div className=\"level-right\">\r\n              <strong className=\"mr-2\">\r\n                {bank ? `Saldo de ${user}:` : \"Tu saldo es:\"}\r\n              </strong>{\" \"}\r\n              ₩{myUser.amount}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"columns is-mobile is-centered is-half mb-3\">\r\n          <div className=\"column is-two-thirds\">\r\n            <input className=\"input is-size-2\" value={`₩ ${monto}`} readOnly />\r\n          </div>\r\n        </div>\r\n\r\n        <Keyboard onKeyPress={(e, n) => handleKeyPress(e, n)} />\r\n\r\n        <BottomButtons {...buttons} />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SendMoney;\r\n","import PlayerGroup from \"../../components/PlayerGroup\";\nimport BottomButtons from \"../../components/BottomButtons\";\nimport Logo from \"../../components/Logo\";\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router-dom\";\n\nimport config from \"../../config\";\nimport { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft, faSadTear } from \"@fortawesome/free-solid-svg-icons\";\nimport Spinner from \"../../components/Spinner\";\n\nlet socket;\n\nconst Bankrupt = () => {\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  let history = useHistory();\n\n  let user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (!user) history.push(\"/monopoly-e-wallet/\");\n\n  // CONEXIÓN CON EL BACKEND\n  useEffect(() => {\n    socket = io(config.ENDPOINT);\n    const u = JSON.parse(localStorage.getItem(\"user\"));\n    socket.emit(\n      \"join\",\n      { username: u.username, room_id: u.room._id },\n      ({ error, user, quantity }) => {\n        if (user) {\n          localStorage.setItem(\"user\", JSON.stringify(user));\n        }\n      }\n    );\n    return () => {\n      //socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, []);\n\n  // OBTENER LOS USUARIOS POR PRIMERA VEZ\n  useEffect(() => {\n    socket.emit(\"get-users\", user?.room._id, (response) => {\n      response = response\n        .filter((item) => item.username !== user.username)\n        .map((item) => {\n          return {\n            username: item.username,\n            avatar: item.avatar === \"bank\" ? \"university\" : item.avatar,\n            action:\n              item.amount !== 0 || item.avatar === \"bank\"\n                ? () => handleBankruptcy(item.username)\n                : () =>\n                    Swal.fire({\n                      title: \"Esta persona está quebrada.\",\n                      confirmButtonText: \"Chale\",\n                    }),\n          };\n        });\n      setUsers(response);\n      setIsLoading(false);\n    });\n  }, []);\n\n  const handleBankruptcy = (who) => {\n    Swal.fire({\n      title: `¿Estás seguro que te quebró ${who}?`,\n      confirmButtonColor: \"#71945B\",\n      cancelButtonColor: \"#B85B28\",\n      confirmButtonText: \"Sí\",\n      cancelButtonText: \"No\",\n      showCancelButton: true,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        socket.emit(\n          \"send-transaction\",\n          {\n            user_id: JSON.parse(localStorage.getItem(\"user\"))._id,\n            amount: JSON.parse(localStorage.getItem(\"user\")).amount,\n            room_id: JSON.parse(localStorage.getItem(\"user\")).room._id,\n            to_user: who,\n          },\n          (response) => {\n            if (response) {\n              history.push(`/monopoly-e-wallet/winner/${response}`);\n              return;\n            }\n          }\n        );\n        user.amount = 0;\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        Swal.fire({\n          title: \"¡Te fuiste a la quiebra!\",\n          confirmButtonText: \"Chale\",\n        });\n        setTimeout(() => history.push(\"/monopoly-e-wallet/game/\", 1000));\n      }\n    });\n  };\n\n  const buttons = {\n    leftButton: {\n      text: <FontAwesomeIcon icon={faAngleLeft} />,\n      action: () => history.push(\"/monopoly-e-wallet/game/\"),\n    },\n  };\n\n  return (\n    <section className=\"section is-centered\">\n      <div className=\"container has-text-black has-text-centered\">\n      <Spinner isLoading={isLoading}/>\n        <Logo mb=\"2\" />\n        <h1 class=\"title is-3\" style={{ marginBottom: \"-0.5rem\" }}>\n          ¿Quién te llevó a la bancarrota?\n        </h1>\n        <div style={{ visibility: isLoading ? \"hidden\" : \"visible\" }}>\n          <PlayerGroup players={users} />\n          <BottomButtons {...buttons} />\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Bankrupt;\n","import Logo from \"../../components/Logo\";\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router-dom\";\nimport PlayerGroup from \"../../components/PlayerGroup\";\nimport BottomButtons from \"../../components/BottomButtons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAddressBook,\n  faHourglassEnd,\n  faAirFreshener,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport config from \"../../config\";\nimport Button from \"../../components/Button\";\nimport { toast } from \"react-toastify\";\nimport Spinner from \"../../components/Spinner\";\n\nlet socket;\n\nconst Bank = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  let history = useHistory();\n\n  let user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (!user) history.push(\"/monopoly-e-wallet/\");\n  else if (user.avatar !== \"bank\") history.push(\"/monopoly-e-wallet/game\");\n\n  const [users, setUsers] = useState([]);\n\n  // CONEXIÓN CON EL BACKEND\n  useEffect(() => {\n    socket = io(config.ENDPOINT);\n    const u = JSON.parse(localStorage.getItem(\"user\"));\n    socket.emit(\n      \"join\",\n      { username: u.username, room_id: u.room._id },\n      ({ error, user, quantity }) => {\n        if (user) {\n          localStorage.setItem(\"user\", JSON.stringify(user));\n        }\n      }\n    );\n    return () => {\n      //socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, []);\n\n  // ESCUCHAR LAS TRANSACCIONES\n  useEffect(() => {\n    socket.on(\"transaction\", (res) => {\n      toast.dark(\n        `${res.username} le ha enviado ₩${res.amount} a ${res.to_user}`\n      );\n    });\n  }, []);\n\n  // ESCUCHAR LAS BANCARROTAS DE CARGA\n  useEffect(() => {\n    socket.on(\"bankrupted\", (person) => {\n      toast.dark(`¡${person} ha quebrado!`);\n    });\n  }, []);\n\n  // ESCUCHAR SI ALGUIEN GANÓ\n  useEffect(() => {\n    socket.on(\"winner-player\", (response) => {\n      history.push(`/monopoly-e-wallet/winner/${response.username}`);\n    });\n  }, []);\n\n  const pedirUsuarios = () => {\n    socket.emit(\"get-users\", user?.room._id, (response) => {\n      response = response.map((item) => {\n        return {\n          username: item.username,\n          avatar: item.avatar,\n          amount: item.amount,\n          action: () => showBankerOptions(item.username),\n        };\n      });\n      setUsers(response);\n      setIsLoading(false);\n    });\n  };\n\n  // OBTENIENDO USUARIOS POR PRIMERA VEZ\n  useEffect(() => {\n    pedirUsuarios();\n  }, []);\n\n  // ESCUCHAR LAS ACTUALIZACIONES EN LOS USUARIOS\n  useEffect(() => {\n    socket.on(\"users-list\", (response) => {\n      console.log(response);\n      response = response.map((item) => {\n        return {\n          username: item.username,\n          avatar: item.avatar,\n          amount: item.amount,\n          action:\n            item.amount !== 0\n              ? () => showBankerOptions(item.username)\n              : () =>\n                  Swal.fire({\n                    title: \"¡Este jugador está quebrado!\",\n                    confirmButtonText: \"Chale\",\n                  }),\n        };\n      });\n      setUsers(response);\n    });\n  }, []);\n\n  const showBankerOptions = (user) => {\n    Swal.fire({\n      title: \"¿Que quieres hacer?\",\n      showCloseButton: true,\n      showDenyButton: true,\n      showCancelButton: true,\n      denyButtonColor: \"#B85B28\",\n      confirmButtonText: `Pass Go`,\n      denyButtonText: `Cobrar`,\n      cancelButtonText: \"Pagar\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        socket.emit(\"send-transaction\", {\n          user_id: JSON.parse(localStorage.getItem(\"user\"))._id,\n          amount: 200,\n          room_id: JSON.parse(localStorage.getItem(\"user\")).room._id,\n          to_user: user,\n        });\n        Swal.fire({\n          title: `Pass Go enviado a ${user}`,\n          confirmButtonColor: \"#71945B\",\n          confirmButtonText: \"Aceptar\",\n        });\n        pedirUsuarios();\n      } else if (result.isDenied) {\n        handleWithdrawingMoney(user);\n      } else if (result.isDismissed) {\n        handleSendingMoney(user);\n      }\n    });\n  };\n\n  const handleWithdrawingMoney = (user) => {\n    history.push(`/monopoly-e-wallet/withdraw/${user}`);\n  };\n\n  const handleSendingMoney = (user) => {\n    history.push(`/monopoly-e-wallet/send/${user}/t`);\n  };\n\n  const handleHistoryClick = () => {\n    history.push(\"/monopoly-e-wallet/history/\");\n  };\n\n  const handleFinishGameClick = () => {\n    Swal.fire({\n      title: \"¿Estás seguro de que quieres finalizar?\",\n      confirmButtonColor: \"#71945B\",\n      confirmButtonText: \"Sí\",\n      cancelButtonColor: \"#B85B28\",\n      cancelButtonText: \"No\",\n      showCancelButton: true,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire({\n          title: \"Esperando confirmación.\",\n          confirmButtonColor: \"#71945B\",\n          confirmButtonText: \"Sí\",\n          cancelButtonColor: \"#B85B28\",\n          cancelButtonText: \"No\",\n          showCancelButton: true,\n        }).then((result) => {\n          if (result.isConfirmed) {\n            Swal.fire({\n              title: \"Partida finalizada con éxito\",\n              confirmButtonColor: \"#71945B\",\n              confirmButtonText: \"Aceptar\",\n            });\n            history.push(\"/monopoly-e-wallet/winner\");\n          } else if (result.isDismissed) {\n            Swal.fire({\n              title: \"¡Han rechazado el fin del juego!\",\n              confirmButtonColor: \"#71945B\",\n              confirmButtonText: \"Aceptar\",\n            });\n          }\n        });\n      }\n    });\n  };\n\n  const buttons = {\n    leftButton: {\n      text: <FontAwesomeIcon icon={faAddressBook} />,\n      action: handleHistoryClick,\n    },\n    rightButton: {\n      text: <FontAwesomeIcon icon={faHourglassEnd} />,\n      action: handleFinishGameClick,\n    },\n  };\n  return (\n    <section className=\"section is-centered\">\n      <div className=\"container\">\n        <Logo />\n        <Spinner isLoading={isLoading}/>\n        <div style={{ visibility: isLoading ? \"hidden\" : \"visible\" }}>\n          <Button\n            action={() => {\n              localStorage.removeItem(\"user\");\n              history.push(\"/monopoly-e-wallet/\");\n            }}\n            text={<FontAwesomeIcon icon={faAirFreshener} />}\n          />\n          <PlayerGroup players={users} />\n          <BottomButtons {...buttons} />\n        </div>\n      </div>\n    </section>\n  );\n};\nexport default Bank;\n","import Logo from \"../../components/Logo\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport PlayerGroup from \"../../components/PlayerGroup\";\n\nimport config from \"../../config\";\nimport { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport BottomButtons from \"../../components/BottomButtons\";\nimport Spinner from \"../../components/Spinner\";\n\nlet socket;\n\nconst WinnerWinnerChickenDinner = () => {\n  let history = useHistory();\n\n  const [user] = useState(JSON.parse(localStorage.getItem(\"user\")));\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { winner } = useParams();\n\n  if (!user) history.push(\"/monopoly-e-wallet/\");\n\n  // CONEXIÓN CON EL BACKEND\n  useEffect(() => {\n    console.log(\"conecte\");\n    socket = io(config.ENDPOINT);\n    socket.emit(\n      \"join\",\n      { username: user.username, room_id: user.room._id },\n      ({ error, user, quantity }) => {\n        if (user) {\n          localStorage.setItem(\"user\", JSON.stringify(user));\n        }\n      }\n    );\n    return () => {\n      //socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, []);\n\n  // OBTENER LOS USUARIOS POR PRIMERA VEZ\n  useEffect(() => {\n    socket.emit(\"get-users\", user?.room._id, (response) => {\n      response = response.map((item) => {\n        return {\n          username: item.username,\n          avatar: item.avatar,\n          amount: item.amount,\n        };\n      });\n      setUsers(response);\n      setIsLoading(false);\n    });\n  }, []);\n\n  const handleHomeButtonClick = () => {\n    localStorage.removeItem(\"user\");\n    history.push(\"/monopoly-e-wallet/\");\n  };\n\n  const buttons = {\n    leftButton: {\n      text: <FontAwesomeIcon icon={faHome} />,\n      action: handleHomeButtonClick,\n    },\n  };\n\n  return (\n    <section className=\"section is-centered\">\n      <div className=\"container is-centered has-text-centered\">\n        <Logo mb=\"2\" />\n        <Spinner isLoading={isLoading}/>\n        <div style={{ visibility: isLoading ? \"hidden\" : \"visible\" }}>\n          <h1 className=\"title is-2\">FIN DEL JUEGO</h1>\n          <h1 className=\"title is-3\">{winner} es el ganador</h1>\n          <PlayerGroup players={users} winner={winner} />\n          <BottomButtons {...buttons} />\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default WinnerWinnerChickenDinner;\n","import { useState, useEffect } from \"react\";\nimport Keyboard from \"../../components/Keyboard\";\nimport Logo from \"../../components/Logo\";\nimport BottomButtons from \"../../components/BottomButtons\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { toast } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { faAngleLeft, faShare } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport config from \"../../config\";\nimport { io } from \"socket.io-client\";\n\nlet socket;\n\nconst WithdrawMoney = () => {\n  let history = useHistory();\n\n  const [monto, setMonto] = useState(\"\");\n  const [hasComma, setHasComma] = useState(false);\n  const [afterComma, setAfterComma] = useState(0);\n\n  let currentUser = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (!currentUser) history.push(\"/monopoly-e-wallet/\");\n\n  // CONECTO CON EL BACKEND\n  useEffect(() => {\n    socket = io(config.ENDPOINT);\n    const u = JSON.parse(localStorage.getItem(\"user\"));\n    socket.emit(\n      \"join\",\n      { username: u.username, room_id: u.room._id },\n      ({ error, user, quantity }) => {\n        if (user) {\n          localStorage.setItem(\"user\", JSON.stringify(user));\n        }\n      }\n    );\n    return () => {\n      //socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, []);\n\n  const { user } = useParams();\n  const saldoActual = \"1.000\";\n\n  const appendNumberToInput = (number) => {\n    const nvo_monto = `${monto}${number}`;\n    setMonto(nvo_monto);\n  };\n\n  const increaseAfterComma = () => setAfterComma(afterComma + 1);\n\n  const handleKeyPress = (e, number) => {\n    switch (number) {\n      case \".\":\n        if (monto.length === 0 && !hasComma) {\n          appendNumberToInput(\"0.\");\n          setHasComma(true);\n        } else if (!hasComma) {\n          appendNumberToInput(\".\");\n          setHasComma(true);\n        }\n        break;\n\n      case \"x\":\n        setMonto(\"\");\n        setHasComma(false);\n        setAfterComma(0);\n        break;\n\n      default:\n        if (!hasComma) {\n          appendNumberToInput(number);\n        } else {\n          if (afterComma < 2) {\n            appendNumberToInput(number);\n            increaseAfterComma();\n          }\n        }\n        break;\n    }\n  };\n\n  const handleWithdrawPayment = () => {\n    //Varias cosas:\n    //1) Valida que el monto a mandar no sea mayor al saldo del usuario.\n    //2) Valida que el usuario haya introducido un monto.\n    //3) Envía el dinero al usuario (backend)\n    //4) Devuelve al menú principal\n    if (monto.length !== 0) {\n      Swal.fire({\n        title: `¿Cobrarle ₩${monto} a ${user}?`,\n        confirmButtonColor: \"#71945B\",\n        cancelButtonColor: \"#B85B28\",\n        confirmButtonText: \"Sí\",\n        cancelButtonText: \"No\",\n        showCancelButton: true,\n      }).then((result) => {\n        if (result.isConfirmed) {\n          socket.emit(\"bank-debit\", {\n            user_id: JSON.parse(localStorage.getItem(\"user\"))._id,\n            amount: monto,\n            room_id: JSON.parse(localStorage.getItem(\"user\")).room._id,\n            to_user: user,\n          });\n          Swal.fire({\n            title: `Cobraste ₩${monto} a ${user}`,\n            confirmButtonColor: \"#71945B\",\n            confirmButtonText: \"Aceptar\",\n          });\n          setTimeout(() => handleBackButtonClick(), 500);\n          handleBackButtonClick();\n        }\n      });\n    } else {\n      toast.error(\"Introduzca el monto a cobrar\", {\n        position: \"top-right\",\n        autoClose: 3500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  };\n\n  const handleBackButtonClick = () => history.push(\"/monopoly-e-wallet/bank\");\n\n  const buttons = {\n    leftButton: {\n      text: <FontAwesomeIcon icon={faAngleLeft} />,\n      action: handleBackButtonClick,\n    },\n    rightButton: {\n      text: <FontAwesomeIcon icon={faShare} />,\n      action: handleWithdrawPayment,\n    },\n  };\n\n  return (\n    <section className=\"section is-centered\">\n      <div className=\"container\">\n        <Logo mb=\"1\" />\n        <div className=\"level is-mobile has-text-black\">\n          <div className=\"level-item\">\n            <div className=\"level-left\">\n              <strong className=\"mr-2\">Cobrando a:</strong> {user}\n            </div>\n          </div>\n          <div className=\"level-item\">\n            <div className=\"level-right\">\n              <strong className=\"mr-2\">Saldo de {user}:</strong> ₩{saldoActual}\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-mobile is-centered is-half mb-3\">\n          <div className=\"column is-two-thirds\">\n            <input\n              className=\"input is-size-2 has-text-centered\"\n              value={`₩ ${monto}`}\n              readOnly\n            />\n          </div>\n        </div>\n\n        <Keyboard onKeyPress={(e, n) => handleKeyPress(e, n)} />\n\n        <BottomButtons {...buttons} />\n      </div>\n    </section>\n  );\n};\n\nexport default WithdrawMoney;\n","import { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft, faReceipt } from \"@fortawesome/free-solid-svg-icons\";\nimport BottomButtons from \"../../components/BottomButtons\";\nimport TransactionsTable from \"../../components/TransactionsTable\";\nimport Logo from \"../../components/Logo\";\nimport Swal from \"sweetalert2\";\nimport config from \"../../config\";\nimport { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport Spinner from \"../../components/Spinner\";\n\n\nlet socket;\n\nconst History = () => {\n  let history = useHistory();\n  const [transactions, setTransactions] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  let user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (!user) history.push(\"/monopoly-e-wallet/\");\n  else if (user.avatar !== \"bank\") history.push(\"/monopoly-e-wallet/game\");\n\n  // CONEXIÓN CON EL BACKEND\n  useEffect(() => {\n    socket = io(config.ENDPOINT);\n    const u = JSON.parse(localStorage.getItem(\"user\"));\n    socket.emit(\n      \"join\",\n      { username: u.username, room_id: u.room._id },\n      ({ error, user, quantity }) => {\n        if (user) {\n          localStorage.setItem(\"user\", JSON.stringify(user));\n        }\n      }\n    );\n    return () => {\n      //socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.emit(\"get-transactions\", user.room._id, (response) => {\n      response = response.map((value, index) => {\n        let creationDate = new Date(value.createdAt);\n        let creationHour = (creationDate.getHours() % 12).toString();\n        let creationMin = creationDate.getMinutes();\n        let amPm = parseInt(creationDate.getHours() / 12) === 1 ? 'pm' : 'am';\n        return {\n          type: value.type === \"e\" ? \"Envío\" : \"Cobro\",\n          sender: value.username,\n          receiver: value.to_user,\n          amount: value.amount,\n          hour: `${creationHour}:${creationMin} ${amPm}`,\n        };\n      });\n      setTransactions(response);\n      setIsLoading(false);\n    });\n  }, []);\n\n  const buttons = {\n    leftButton: {\n      text: <FontAwesomeIcon icon={faAngleLeft} />,\n      action: () => history.push(\"/monopoly-e-wallet/bank\"),\n    },\n    rightButton: {\n      text: <FontAwesomeIcon icon={faReceipt} />,\n      action: () =>\n        Swal.fire({\n          title: \"Team MARVEL - I Reto Interno KURODev\",\n          text: \"Albert Acevedo, Gabriel Roa, Jonathan Calles\",\n          icon: \"success\",\n        }),\n    },\n  };\n\n  return (\n    <section className=\"section is-centered has-text-centered\">\n      <div className=\"container is-centered has-text-centered\">\n        <Logo mb=\"0\" />\n        <Spinner isLoading={isLoading}/>\n        <div\n          className=\"is-centered has-text-centered\"\n          style={{\n            visibility: isLoading ? \"hidden\" : \"visible\"\n          }}\n        >\n          <BottomButtons {...buttons} />\n          <TransactionsTable transactions={transactions} />\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default History;\n","const Button = ({text, color, action, size}) => {\r\n    return(\r\n        <button className={`button is-${color} is-${size}`} onClick={action}>{text}</button>\r\n    );\r\n}\r\n\r\nexport default Button;","export default __webpack_public_path__ + \"static/media/logo.35edb2b5.png\";","import logo from \"./logo.png\";\r\n\r\nconst Logo = ({mb}) => {\r\n    return(\r\n    <figure className={`image container mb-${mb} has-ratio`} width=\"400\" style={{marginTop: \"-2rem\"}}>\r\n        <img alt=\"Logo de Monopoly\" src={logo}/>\r\n    </figure>);\r\n}\r\n\r\nexport default Logo;","const PlayerName = ({name, onTextChange}) => {\r\n    return(\r\n        <div>\r\n            <label className=\"is-white is-size-4\" style={{letterSpacing:'2px'}}>\r\n                Jugador:<br/>\r\n                <input className=\"input\" value={name} onChange={(e) => onTextChange(e)}></input>\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayerName;","export default __webpack_public_path__ + \"static/media/marvel.568d8c62.png\";","export default __webpack_public_path__ + \"static/media/kuro.cbe4521a.png\";","import marvel from \"./marvel.png\"\r\nimport kuro from \"./kuro.png\"\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <div className=\"level has-text-centered is-mobile mt-6\">\r\n            <div className=\"level-left mt-6\">\r\n                <div className=\"level-item\">\r\n                    <img src={marvel} alt=\"Logo de MARVEL\" className=\"image has-ratio\" width=\"125\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"level-right mt-6\">\r\n                <div className=\"level-item\">\r\n                    <img src={kuro} alt=\"Logo de KuroDev\" className=\"image has-ratio\" width=\"67\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","const config = {\n    //ENDPOINT: \"http://192.168.0.107:5007\"\n    ENDPOINT: \"https://e-wallet-monopoly.herokuapp.com\",\n\n};\n\nexport default config;\n","import { ClapSpinner, FireworkSpinner, GooSpinner, RingSpinner, JellyfishSpinner } from \"react-spinners-kit\";\n\nconst Spinner = ({isLoading}) => (\n  <div\n    className=\"box is-centered has-text-centered\"\n    style={{\n      position: \"fixed\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      zIndex: 100,\n      visibility: isLoading ? \"visible\" : \"hidden\",\n    }}\n  >\n    <JellyfishSpinner loading={isLoading} />\n  </div>\n);\n\nexport default Spinner;\n","import {\r\n  faCat,\r\n  faPiggyBank,\r\n  faDog,\r\n  faShip,\r\n  faCar,\r\n  faQuestion,\r\n  faUniversity,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst { FontAwesomeIcon } = require(\"@fortawesome/react-fontawesome\");\r\n\r\nconst Player = ({\r\n  username,\r\n  avatar,\r\n  amount,\r\n  action,\r\n  gameover,\r\n  winner,\r\n  winnerScreen,\r\n}) => {\r\n  let ico;\r\n\r\n  switch (avatar) {\r\n    case \"bank\":\r\n      ico = faPiggyBank;\r\n      break;\r\n\r\n    case \"cat\":\r\n      ico = faCat;\r\n      break;\r\n\r\n    case \"dog\":\r\n      ico = faDog;\r\n      break;\r\n\r\n    case \"ship\":\r\n      ico = faShip;\r\n      break;\r\n\r\n    case \"car\":\r\n      ico = faCar;\r\n      break;\r\n\r\n    case \"university\":\r\n      ico = faUniversity;\r\n      break;\r\n\r\n    default:\r\n      ico = faQuestion;\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={action}\r\n      className={`card has-text-centered ${\r\n        !winner && winnerScreen ? \"tint\" : undefined\r\n      }`}\r\n      style={\r\n        gameover\r\n          ? {\r\n              borderStyle: \"solid\",\r\n              borderColor: \"#C70000\",\r\n              borderWidth: \"1em\",\r\n            }\r\n          : undefined || winner\r\n          ? {\r\n              boxShadow: \"0 0 0 0.75rem #f9ee23\",\r\n            }\r\n          : undefined\r\n      }\r\n    >\r\n      <header className=\"card-header is-size-4\">\r\n        <div className=\"card-header-title is-centered\">\r\n          <div\r\n            className=\"has-background-warning pl-5 pr-5 pt-1 has-text-white\"\r\n            style={{ borderRadius: \"5px\" }}\r\n          >\r\n            {username}\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <div className=\"card-image is-128x128 has-text-black is-size-1\">\r\n        <FontAwesomeIcon icon={ico} />\r\n      </div>\r\n      <footer className=\"card-footer\">\r\n        <p className=\"card-footer-item has-text-black is-centered\">\r\n          {amount && amount!==0 ? `₩ ${amount}` : amount===0 ? \"¡Quebrado!\" : undefined}\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import Player from \"../Player\";\n\nconst PlayerGroup = ({ players, winner }) => {\n  console.log(players);\n\n  return (\n    <div>\n      <div className=\"columns is-mobile is-centered has-text-centered mt-1 \">\n        {\n          // eslint-disable-next-line\n          players.map((value, index) => {\n            if (winner) {\n              if (\n                value &&\n                ((index === 0 && value.avatar !== \"bank\") ||\n                  index === 1 ||\n                  (index === 2 && players[0].avatar === \"bank\"))\n              )\n                return (\n                  <div key={index} className=\"column is-6\">\n                    <Player\n                      {...value}\n                      winner={winner === value.username ? winner : undefined}\n                      winnerScreen={true}\n                    />\n                  </div>\n                );\n            } else if (\n              value &&\n              ((index === 0 && value.avatar !== \"bank\") ||\n                index === 1 ||\n                (index === 2 && players[0].avatar === \"bank\"))\n            )\n              return (\n                <div key={index} className=\"column is-6\">\n                  <Player {...value} />\n                </div>\n              );\n            else return <div></div>;\n          })\n        }\n      </div>\n      <div className=\"columns is-mobile is-half is-centered has-text-centered\">\n        {\n          // eslint-disable-next-line\n          players.map((value, index) => {\n            if (winner) {\n              if (\n                (index === 2 && players[0].avatar !== \"bank\") ||\n                index === 3 ||\n                index === 4\n              )\n                return (\n                  <div key={index} className=\"column is-6\">\n                    <Player\n                      {...value}\n                      winner={winner === value.username ? winner : undefined}\n                      winnerScreen={true}\n                    />\n                  </div>\n                );\n            } else if (\n              (index === 2 && players[0].avatar !== \"bank\") ||\n              index === 3 ||\n              index === 4\n            )\n              return (\n                <div key={index} className=\"column is-6\">\n                  <Player {...value} />\n                </div>\n              );\n            else return <div></div>;\n          })\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerGroup;\n","const Key = ({number, action}) => {\r\n    return (\r\n        <div className=\"column is-4\">\r\n            <div onClick={(e) => action(e)} className=\"button is-large has-background-warning has-text-white\" value={number}>\r\n                {number}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Key;","import Key from \"./Key\";\r\n\r\nconst Keyboard = ({ onKeyPress }) => {\r\n  return (\r\n    <div className=\"columns is-mobile is-3 is-centered has-text-centered\">\r\n      <div className=\"box has-background-success is-centered has-text-centered is-6\">\r\n        <div className=\"columns is-mobile  is-centered\">\r\n          <Key number=\"1\" action={(e, number) => onKeyPress(e, \"1\")} />\r\n          <Key number=\"2\" action={(e, number) => onKeyPress(e, \"2\")} />\r\n          <Key number=\"3\" action={(e, number) => onKeyPress(e, \"3\")} />\r\n        </div>\r\n        <div className=\"columns is-mobile  \">\r\n          <Key number=\"4\" action={(e, number) => onKeyPress(e, \"4\")} />\r\n          <Key number=\"5\" action={(e, number) => onKeyPress(e, \"5\")} />\r\n          <Key number=\"6\" action={(e, number) => onKeyPress(e, \"6\")} />\r\n        </div>\r\n        <div className=\"columns is-mobile  \">\r\n          <Key number=\"7\" action={(e, number) => onKeyPress(e, \"7\")} />\r\n          <Key number=\"8\" action={(e, number) => onKeyPress(e, \"8\")} />\r\n          <Key number=\"9\" action={(e, number) => onKeyPress(e, \"9\")} />\r\n        </div>\r\n        <div className=\"columns is-mobile  \">\r\n          <Key number=\".\" action={(e, number) => onKeyPress(e, \".\")} />\r\n          <Key number=\"0\" action={(e, number) => onKeyPress(e, \"0\")} />\r\n          <Key number=\"x\" action={(e, number) => onKeyPress(e, \"x\")} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Keyboard;\r\n","import Button from \"../Button\";\n\nconst BottomButtons = ({ leftButton, rightButton }) => {\n  return (\n    <div className=\"level is-mobile has-text-black mt-4\">\n      <div className=\"level-item\">\n        {leftButton ? (\n          <div className=\"level-left\">\n            <Button\n              text={leftButton.text}\n              color=\"warning\"\n              size=\"large\"\n              action={leftButton.action}\n            />\n          </div>\n        ) : undefined}\n      </div>\n      {rightButton ? (\n        <div className=\"level-item\">\n          <div className=\"level-right\">\n            <Button\n              text={rightButton.text}\n              color=\"link\"\n              size=\"large\"\n              action={rightButton.action}\n            />\n          </div>\n        </div>\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default BottomButtons;\n","import Logo from \"../../components/Logo\";\nimport Player from \"../../components/Player\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\n\nconst GameOver = () => {\n  let history = useHistory();\n  \n  let user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (!user) history.push(\"/monopoly-e-wallet/\");\n\n  const handleHomeButtonClick = () => {\n    history.push(\"/monopoly-e-wallet/\");\n  };\n\n  return (\n    <section className=\"section is-centered\">\n      <div className=\"container is-centered has-text-centered\">\n        <Logo mb=\"2\" />\n        <h1 className=\"title is-2\">FIN DEL JUEGO</h1>\n        <h1 className=\"title is-3\">Te quebró ANYI</h1>\n        <Player\n          playerName=\"ANYI\"\n          token=\"http://placekitten.com/128/129\"\n          amount=\"null\"\n          gameover\n        />\n        <button\n          className=\"button is-rounded is-large mt-5\"\n          onClick={handleHomeButtonClick}\n        >\n          <span className=\"icon is-medium\">\n            <FontAwesomeIcon icon={faHome} />\n          </span>\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default GameOver;\n","const TransactionsTable = ({ transactions }) => {\n  return (\n    <table className=\"table is-small\" style={{\n      marginLeft: \"auto\",\n      marginRight: \"auto\",}}>\n      <thead>\n        <tr>\n          <th>Tipo</th>\n          <th>Envió</th>\n          <th>Recibió</th>\n          <th>Monto</th>\n          <th>Hora</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions?.map((value) => (\n          <tr>\n            <td>{value.type}</td>\n            <td>{value.sender}</td>\n            <td>{value.receiver}</td>\n            <td>₩{value.amount}</td>\n            <td>{value.hour}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default TransactionsTable;\n","import Index from \"./views/Index\";\r\nimport \"./style/app.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Game from \"./views/Game\";\r\nimport SendMoney from \"./views/SendMoney\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Bankrupt from \"./views/Bankrupt\";\r\nimport Bank from \"./views/Bank\";\r\nimport GameOver from \"./views/GameOver\";\r\nimport WinnerWinnerChickenDinner from \"./views/WinnerWinnerChickenDinner\";\r\nimport WithdrawMoney from \"./views/WithdrawMoney\";\r\nimport History from \"./views/History\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/monopoly-e-wallet/\" >\r\n          <Index />\r\n        </Route>\r\n        <Route path=\"/monopoly-e-wallet/game/\" >\r\n          <Game />\r\n        </Route>\r\n        <Route path=\"/monopoly-e-wallet/send/:user/:bank?\">\r\n          <SendMoney />\r\n        </Route>\r\n        <Route path=\"/monopoly-e-wallet/bankrupt/\" >\r\n          <Bankrupt />\r\n        </Route>\r\n        <Route path=\"/monopoly-e-wallet/bank/\" >\r\n          <Bank />\r\n        </Route>\r\n        <Route path=\"/monopoly-e-wallet/gameover/\" >\r\n          <GameOver />\r\n        </Route>\r\n        <Route path=\"/monopoly-e-wallet/winner/:winner\" >\r\n          <WinnerWinnerChickenDinner />\r\n        </Route>\r\n        <Route path=\"/monopoly-e-wallet/withdraw/:user\" >\r\n          <WithdrawMoney />\r\n        </Route>\r\n        <Route path=\"/monopoly-e-wallet/history/\" >\r\n          <History />\r\n        </Route>\r\n      </Switch>\r\n      <ToastContainer />\r\n    </Router>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://cra.link/PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://cra.link/PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n    }\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}